<!DOCTYPE html>
<html>

<head><meta http-equiv="Content-Type" content="text/html; charset=utf-8">
 <!-- Copyright (c) 2006-2019, Brenkman Andrey and/or its affiliates. All rights reserved. -->
 <title>Дневник разработчика шахматной программы часть 6</title>
</head>

<body>

<table border="0" cellspacing="10" width="100%" id="AutoNumber1"  bgcolor="#CCCCFF">
  <tr>
    <td width="100%">
    <table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber2">
      <tr>
        <td width="75%">
    <h2 align="center">Ifrit </h2>
    <h2 align="center">История разработки.</h2>
        </td>
        <td width="25%">
        <p align="left"><a href="ifrit_chess_engine.html">на главную страницу</a></td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td width="100%">
      <p class="MsoNormal" align="left"><span style="font-size:14.0pt">&nbsp;<br>
      <a href="Ifrit_history_development_5.htm">Ifrit_<span lang="en-us">j</span> История разработки. <br >
      Часть 5 </a>
      </p>


<font size="4">

      <p align="left">Ifrit<br>
      Часть 6<br>
      <br>
      Опубликованная версия Ifrit_j1_2<br>
      <br>
      ___________________________________________________________________________________<br>
      Пятница, 31 июля 2009 г.<br>
      <br>
      Каким образом сильнейшим движкам удается так сильно играть?<br>
      <br>
      Тут есть два момента - это поиск и оценка позиции.<br>
      Оценка позиции это принципиальный момент. И поиском его компенсировать 
      практически невозможно. Если программа неверно оценивает позицию и 
      проигрышную считает выигрышной, то даже если она легко пересчитывает 
      противника, от этого толку никакого, потому что она сама приведет себя к 
      поражению.<br>
      Это очень ярко видно, когда оставляешь только подсчет материала. Программа 
      бездействует, в то время как противник разворачивает силы и только когда 
      начинается атака, она реагирует, но уже поздно.<br>
      <br>
      Для поиска главный параметр это глубина. Смотреть нужно как можно глубже. 
      Но для этого нужно отсекать лишнее, при этом можно отсечь стоящие 
      варианты. В этом и проявляется главная антиномия поиска - смотреть нужно 
      как можно глубже и как можно полнее, что невозможно.<br>
      Весь секрет в качественном отсечении лишнего и продления нужного. <br>
      <br>
      Считаю, что в данный момент оценка позиции самое слабое место Ифрита. Над 
      оценкой будем работать. <br>
      Конечно, глубина поиска тоже слишком маленькая и тут тоже нужно 
      дорабатывать, но на поиске я и так зациклился.<br>
      В общем, и глубина, и оценка оставляют желать лучшего.<br>
      <br>
      ___________________________________________________________________________________<br>
      Воскресенье, 2 августа 2009 г.<br>
      Начальная позиция.<br>
      Как мы помним, для полного перебора справедливы следующие значения:<br>
      Глубина перебора&nbsp;&nbsp;&nbsp; Количество узлов<br>
      &nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 9 322 <br>
      &nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 206 603 <br>
      &nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5 072 212 <br>
      &nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 124 132 536 <br>
      &nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3 320 034 396<br>
      <br>
      Значит, глубина счета будет от 4 до 5 полуходов в секунду, в зависимости 
      от скорости.<br>
      Для идеальной альфа беты от 8 до 10 полуходов в секунду.<br>
      Идеальная альфа-бета:<br>
      &nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 11 141 узлов<br>
      &nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 57 619 узлов<br>
      &nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 297 185 узлов<br>
      &nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 589 921 узлов<br>
      &nbsp;10&nbsp;&nbsp;&nbsp; 8 478 249 узлов<br>
      <br>
      Ифрит реально считает:<br>
      &nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 28 тысяч узлов(2,5)<br>
      &nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 382 тысяч узлов(6,5)<br>
      &nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 906 тысяч узлов(3)<br>
      &nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 9 988 тысяч узлов(6,2)<br>
      &nbsp;10&nbsp;&nbsp; 47 804 тысяч узлов(5,6)<br>
      <br>
      У Ифрита скорость ~400кн/сек., он показывает глубину 7 полуходов в 
      секунду.<br>
      С сортировкой можно поработать, но выше 8 все равно не прыгнуть.<br>
      Таким образом, тут цена вопроса один полуход.<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 8 августа 2009 г.<br>
      <br>
      У Фрукта в чистой альфа-бете скорость ~1200кн/сек., он показывает: <br>
      глубина 9 за 2 секунды и 2566 тысяч узлов. <br>
      Тут что-то не то. И это «что-то» кроется в хеш-таблице.<br>
      <br>
      Отключив отсечения при использовании хеш-таблицы, получил:<br>
      9 глубина за 8 секунд и 10752 тысяч узлов.<br>
      <br>
      Раньше я как-то не обращал на них внимание, думая, что это случай мата. Но 
      непонятно, как мат может так сокращать время перебора и количество 
      рассмотренных узлов в начальной позиции.<br>
      <br>
      Суть тут в том, чтобы отсекать поиск по оценке из хеш-таблицы. Но ведь 
      существует много коллизий, когда ключ совпадает, но это разные позиции и 
      значит, мы по ошибке отсекаем поиск. Учитывая это, я не готов использовать 
      отсечение по оценке.<br>
      Тут есть, над чем подумать и над чем поэкспериментировать.<br>
      <br>
      В данный момент в Ифрите хеш-таблица используется только для сортировки. 
      Это избавляет меня от ошибок связанных с таблицей. Все ошибки влияют на 
      скорость и больше ни на что.<br>
      Без таблицы<br>
      &nbsp;9&nbsp;&nbsp;&nbsp; 12 269 тысяч узлов(6,2) за 21 секунду<br>
      с таблицей<br>
      &nbsp;9&nbsp;&nbsp;&nbsp; 9 850 тысяч узлов(6,2) за 16 секунд.<br>
      <br>
      Заметил, что при повторных расчетах на ту же глубину в начальной позиции 
      количество рассмотренных узлов все время разное.<br>
      Причина разброса в киллер-ходах. Точнее в том, что массив киллеров у меня 
      не инициализируется и там может быть что угодно.<br>
      Конечно, на результат поиска, т.е. оценку варианта это не влияет, а вот на 
      время поиска влияет и может так получится, что будет выведен другой 
      вариант с такой же оценкой. В итоге убрал эту неопределенность путем 
      инициализации массива.<br>
      <br>
      ___________________________________________________________________________________<br>
      Воскресенье, 9 августа 2009 г.<br>
      Похоже, что главный секрет Рыбки в отличной хеш-таблице. Она максимально 
      эффективно использует результат предыдущего поиска.<br>
      Я и раньше замечал, как сильно она ускоряется, если сделать и вернуть ход. 
      Это все на поверхности, но видимо самое трудное это - понять, как 
      реализовать эффективное хеширование.<br>
      <br>
      <br>
      Наконец-то взялся за статическую оценку.<br>
      План того, что должно быть учтено.<br>
      <br>
      Надо будет учесть следующие параметры (таблица от WildCat’а он же Игорь 
      Коршунов)<br>
      <br>
      1. проходные - 195<br>
      2. ценность полей - 173<br>
      4. мобильность - 78<br>
      3. пешечный щит - 69<br>
      5. тяжелые фигуры - 29<br>
      6. пешечная структура - 25<br>
      7. очередность хода - 18<br>
      8. атака на короля - 9<br>
      9. паттерны - 0<br>
      <br>
      Элементы, отнимающие силу:<br>
      <br>
      Код: Выделить всё<br>
      10. разноцвет - 19<br>
      <br>
      <br>
      Выведу параметры во внешний файл, чтобы желающие могли попытаться сами 
      настроить оценку. Ну и конечно - это работа для моих тестеров.<br>
      <br>
      ___________________________________________________________________________________<br>
      <br>
      <br>
      Опубликованная версия Ifrit_j1_3<br>
      <br>
      ___________________________________________________________________________________<br>
      Среда, 19 августа 2009 г.<br>
      Вчера выложил новую версию. Вывел параметры оценки во внешний файл. 
      Специально не стал ничего добавлять.<br>
      Таким образом, осталась корявая и недостаточно проработанная оценка. И 
      оценку, и количество параметров надо менять.<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 22 августа 2009 г.<br>
      <br>
      Похоже, что сортировка по истории в моем исполнении ничего не дает.<br>
      <br>
      FEN: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 <br>
      <br>
      С сортировкой по истории:<br>
      При отсечке по бете прибавляем 1<br>
      Ifrit_j1_4_Beta_24_8_2009:<br>
      10/10 01:33 40.216.875 498.331 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      При отсечке по бете прибавляем depth<br>
      Ifrit_j1_4_Beta_24_8_2009:<br>
      10/10 01:24 35.905.985 500.320 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      При отсечке по бете прибавляем depth_max – depth<br>
      Ifrit_j1_4_Beta_24_8_2009:<br>
      10/10 01:27 36.295.506 486.880 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      Что-то непонятное. Отключил сортировку, но оставил историю в генераторе и 
      в результате сюрприз.<br>
      Ifrit_j1_4_Beta_24_8_2009:<br>
      10/10 01:17 40.604.902 617.123 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      Без сортировки тихих ходов:<br>
      Ifrit_j1_4_Beta_22_8_2009:<br>
      10/10 01:33 48.715.229 611.570 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      Плохие взятия в конец:<br>
      Ifrit_j1_4_Beta_22_8_2009:<br>
      10/10 01:42 49.795.562 576.818 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      ___________________________________________________________________________________<br>
      Среда, 26 августа 2009 г.<br>
      <br>
      Чистая альфа-бета.<br>
      <br>
      FEN: 5rk1/1p6/q2P3p/2p2rp1/p1nbQ3/P1N3BP/1PR1B1P1/4K3 b - - 0 1 <br>
      <br>
      С сортировкой взятий.<br>
      Ifrit_j1_4_Beta__25_8_2009:<br>
      9/10 01:17 58.259.236 996.685 +1,78 b7b5 Be2d3 Kg8h8 d6d7 Rf5f7 Bd3xc4 
      b5xc4 Bg3e5+ Bd4xe5 Qe4xe5+<br>
      <br>
      Без сортировки взятий.<br>
      Ifrit_j1_4_Beta__25_8_2009:<br>
      9/10 02:11 58.164.410 631.576 +1,78 b7b5 Be2d3 Kg8h8 d6d7 Rf5f7 Bd3xc4 
      b5xc4 Bg3e5+ Bd4xe5 Qe4xe5+<br>
      <br>
      С сортировкой взятий встроенной в цикл обхода списка. Так что при отсечке 
      по бете лишнее не сортируем. Почти никакого эффекта.<br>
      Решил оставить, как было. Т.е. в виде отдельной функции.<br>
      Ifrit_j1_4_Beta__25_8_2009:<br>
      9/10 01:17 58.259.236 998.016 +1,78 b7b5 Be2d3 Kg8h8 d6d7 Rf5f7 Bd3xc4 
      b5xc4 Bg3e5+ Bd4xe5 Qe4xe5+<br>
      <br>
      Сделал фигуру которую берут на порядок тяжелее той, которой берут.<br>
      Ifrit_j1_4_Beta_26_8_2009:<br>
      9/10 00:21 15.090.935 959.068 +1,78 b7b5 Be2d3 Kg8h8 d6d7 Rf5f7 Bd3xc4 
      b5xc4 Bg3e5+ Bd4xe5 Qe4xe5+<br>
      10/12 01:26 28.512.975 436.044 +1,68 b7b5 Be2d3 Kg8h8 Bd3xc4 b5xc4 Qe4e2 
      Kh8g8 Qe2e6+ Kg8g7 Ke1d1 Bd4xc3 b2xc3<br>
      <br>
      Включил delta pruning.<br>
      Ifrit_j1_4_Beta_26_8_2009:<br>
      9/10 00:18 15.091.303 1.050.926 +1,78 b7b5 Be2d3 Kg8h8 d6d7 Rf5f7 Bd3xc4 
      b5xc4 Bg3e5+ Bd4xe5 Qe4xe5+<br>
      10/12 01:07 28.595.814 588.475 +1,68 b7b5 Be2d3 Kg8h8 Bd3xc4 b5xc4 Qe4e2 
      Kh8g8 Qe2e6+ Kg8g7 Ke1d1 Bd4xc3 b2xc3<br>
      <br>
      Включил запись истории (depth_max – depth).<br>
      Ifrit_j1_4_Beta_26_8_2009:<br>
      9/10 00:26 14.199.254 746.072 +1,78 b7b5 Be2d3 Kg8h8 d6d7 Rf5f7 Bd3xc4 
      b5xc4 Bg3e5+ Bd4xe5 Qe4xe5+<br>
      10/12 02:11 27.180.343 258.439 +1,68 b7b5 Be2d3 Kg8h8 Bd3xc4 b5xc4 Qe4e2 
      Kh8g8 Qe2e6+ Kg8g7 Ke1d1 Bd4xc3 b2xc3<br>
      <br>
      Включил запись истории (depth).<br>
      Ifrit_j1_4_Beta_26_8_2009:<br>
      9/10 00:28 15.508.331 722.898 +1,78 b7b5 Be2d3 Kg8h8 d6d7 Rf5f7 Bd3xc4 
      b5xc4 Bg3e5+ Bd4xe5 Qe4xe5+<br>
      10/12 02:03 23.666.134 249.237 +1,68 b7b5 Be2d3 Kg8h8 Bd3xc4 b5xc4 Qe4e2 
      Kh8g8 Qe2e6+ Kg8g7 Ke1d1 Bd4xc3 b2xc3<br>
      <br>
      Включил запись истории (1).<br>
      Ifrit_j1_4_Beta_26_8_2009:<br>
      9/10 00:28 15.567.000 719.861 +1,78 b7b5 Be2d3 Kg8h8 d6d7 Rf5f7 Bd3xc4 
      b5xc4 Bg3e5+ Bd4xe5 Qe4xe5+<br>
      10/12 02:15 25.930.328 242.196 +1,68 b7b5 Be2d3 Kg8h8 Bd3xc4 b5xc4 Qe4e2 
      Kh8g8 Qe2e6+ Kg8g7 Ke1d1 Bd4xc3 b2xc3<br>
      <br>
      <br>
      FEN: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 <br>
      <br>
      Включил запись истории (1).<br>
      Ifrit_j1_4_Beta_26_8_2009:<br>
      9/9 00:13 9.872.913 886.178 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/10 01:22 36.201.452 523.240 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      Без истории.<br>
      Ifrit_j1_4_Beta_26_8_2009:<br>
      9/9 00:11 8.863.088 971.297 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/10 01:10 39.825.148 678.590 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      При включенной сортировке по истории количество позиций уменьшается, но 
      весь эффект съедает уменьшение скорости.<br>
      Для альфа-беты в моем исполнении минусы сортировки по истории перевешивают 
      плюсы.<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 29 августа 2009 г.<br>
      <br>
      Futility pruning решение некоторых задач отодвигает на полуход вглубь. Мне 
      это не нравиться, так что его я пока отключу.<br>
      <br>
      Чистая альфа-бета. Дельта включена.<br>
      <br>
      FEN: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 <br>
      <br>
      Без Futility pruning<br>
      Ifrit_j1_4_Beta_29_8_2009:<br>
      9/9 00:11 8.863.088 969.597 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/10 01:08 39.825.808 698.122 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      g2g3 Nf4e6 Bf1c4 d7d5<br>
      <br>
      Используем Futility pruning<br>
      Ifrit_j1_4_Beta_29_8_2009:<br>
      9/9 00:11 8.813.266 980.995 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/10 01:00 34.147.833 698.891 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      g2g3 Nf4e6 Bf1c4 d7d5<br>
      <br>
      Этой эвристикой надо будет основательно заниматься. Пока что на это нет ни 
      времени, ни желания.<br>
      <br>
      Мои реализации сортировки по истории, futility pruning, IID мне не 
      нравятся. Поэтому я их отключил. Вероятно, у меня кривые реализации или я 
      что-то недоделал. Надо будет с ними разбираться. Выпускаю версию в таком 
      виде.<br>
      <br>
      ___________________________________________________________________________________<br>
      <br>
      <br>
      Опубликованная версия Ifrit_j1_4<br>
      <br>
      ___________________________________________________________________________________<br>
      Вторник, 1 сентября 2009 г.<br>
      <br>
      С хеш-таблицей у меня что-то сильно не то.<br>
      В начальной позиции только альфа-бета для глубины 4 на 1036 узлов получаю 
      8 коллизий. Одна коллизия на 130 позиций!<br>
      Это даже не коллизии, а ненайденный ход в этой позиции. А сколько не тех 
      позиций, но в которых все же есть искомый ход?<br>
      <br>
      ___________________________________________________________________________________<br>
      Среда, 2 сентября 2009 г.<br>
      <br>
      Ясно, что количество узлов недостаточно. Надо знать отношение вхождений в 
      хеш-таблицу к количеству коллизий.<br>
      В начальной позиции только альфа-бета для глубины 4:<br>
      Записи 578<br>
      Вхождения 163<br>
      Коллизия 8<br>
      <br>
      Одно вхождение на ~3,5 записей <br>
      Одна коллизия на ~20 вхождений и ~72 записей.<br>
      <br>
      Записи - это сколько раз за это время писали в хеш-таблицу.<br>
      Вхождения - это сколько раз мы брали данные из таблицы.<br>
      Коллизии - это сколько раз ход из таблицы найден не был.<br>
      <br>
      Типичная картина следующая:<br>
      depth 3<br>
      p_hash_moves[].depth 2<br>
      p_hash_moves[].depth_max 3<br>
      p_hash_moves[].flag_hash_moves 2<br>
      key 3901698933537210451<br>
      p_hash_moves[].key 3901698933537210451<br>
      p_hash_moves[].move 38277184<br>
      Ходящая фигура N(конь)<br>
      p_hash_moves[].score_move 7(просто шум)<br>
      b1 c3<br>
      вид хода 1(простой ход)<br>
      Взятая фигура x(взятия нет)<br>
      p_list_surplus_moves-&gt;end_list= 20(искали в списке из 20 ходов)<br>
      <br>
      В начальной позиции только альфа-бета для глубины 8:<br>
      Записи 621372<br>
      Вхождения 316398<br>
      Коллизия 31474<br>
      <br>
      Одно вхождение на ~2 записей <br>
      Одна коллизия на ~10 вхождений и ~20 записей.<br>
      <br>
      <br>
      Заменил генератор случайных чисел таблицей (на время, в качестве 
      эксперимента).<br>
      В результате получил:<br>
      Записи 621308<br>
      Вхождения 316323<br>
      Коллизия 31469<br>
      <br>
      Значит, дело не в плотности случайных чисел.<br>
      <br>
      Для глубины 4 где-то пишем три позиции в одно место.<br>
      <br>
      <br>
      В начальной позиции только альфа-бета для глубины 7:<br>
      256 Мб<br>
      Всего в хеш-таблице позиций 8 388 607 <br>
      Для записей использовали позиций 72 200<br>
      Записи 117 797<br>
      Вхождения 48 968<br>
      Коллизия 3 430<br>
      <br>
      Коэффициент перезаписи 1,6 записей на место. Меня вполне устраивает.<br>
      Видно, что для глубины 7 такой объем таблицы явно избыточен.<br>
      <br>
      В начальной позиции только альфа-бета для глубины 4:<br>
      Всего позиций 8388607<br>
      Для записей использовали позиций 423<br>
      Записи 578<br>
      Вхождения 163<br>
      Коллизия 8<br>
      <br>
      Немного поразмышляв, я прихожу к выводу, что коллизии возникают по причине 
      несоответствия ключа позиции. По-моему оно возникает из за того, что я 
      где-то не меняю ключ. Точнее сказать - ход делаю, а ключ не меняю. <br>
      Предположение не оправдалось.<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 5 сентября 2009 г.<br>
      <br>
      Три дня не мог понять, в чем дело. Проверил все. В итоге, когда 
      редуцировал тестовую позицию до одних королей, то выяснил, что в одной и 
      той же позиции возможен ход как белых, так и черных! Почему-то я считал 
      это невозможным, и только дойдя до того, что стал распечатывать доски в 
      файл, обнаружил, что был неправ. Дальше увидел, что не отображал в 
      хеш-ключе рокировки и взятие на проходе. <br>
      После того как все учел, коллизии исчезли даже до глубины 8 полуходов. 
      Глубже пока не тестировал.<br>
      <br>
      ___________________________________________________________________________________<br>
      Воскресенье, 6 сентября 2009 г.<br>
      Я действительно утомился отлавливать эти коллизии! Снова вытащил свой 
      шаманский бубен :) Это напоминает времена, когда я писал генератор ходов. 
      Очень занудное и щедрое на сюрпризы занятие. Сейчас заново переписываю 
      функцию, меняющую ключ после хода. Все коллизии обнаруженные до сих пор 
      имеют происхождением неправильное изменение ключа. Все-таки я надеюсь 
      отловить все коллизии. Потом можно будет попытаться использовать оценку 
      таблицы для отсечки. А может быть это и не нужно. Дальше будет видно. В 
      старой хеш-таблице была где-то одна коллизия на двадцать ходов :) На самом 
      деле мой движок совершенно не боится коллизий, так как таблица 
      используется только для поднятия лучшего хода из списка, но все таки 
      неприятно, когда срывается главный вариант и достаточно глубокому поиску 
      приходится заново искать лучший ход. Это дестабилизирует и замедляет 
      перебор. А после того как я отказался от IID, т.е. внутренних итераций, 
      вопрос стал еще острее.<br>
      <br>
      ___________________________________________________________________________________<br>
      Вторник, 8 сентября 2009 г.<br>
      <br>
      FEN: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 <br>
      <br>
      Альфа–бета без киллера<br>
      Ifrit_j1_5_Beta_8_9_2009:<br>
      8/8 00:04 1.512.119 504.039 0,00 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00<br>
      9/9 00:20 14.648.735 898.860 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/10 03:23 116.047.784 634.033 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      Альфа-бета<br>
      Ifrit_j1_5_Beta_8_9_2009:<br>
      8/8 00:02 923.461 496.484 0,00 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00<br>
      9/9 00:11 8.831.658 959.649 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/10 01:16 39.875.518 619.878 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      Смешно что когда хеш-таблица была с коллизиями то результат был лучше<br>
      10/10 01:08 39.825.808 698.122 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      g2g3 Nf4e6 Bf1c4 d7d5<br>
      <br>
      <br>
      Сделал использование оценки из хеш-таблицы<br>
      Ifrit_j1_5_Beta_8_9_2009:<br>
      8/8 00:01 615.976 498.765 0,00 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00<br>
      9/9 00:06 4.143.603 858.244 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/11 00:52 29.598.962 640.406 +0,02 e2e4 e7e5 Bf1c4 Bf8c5 Qd1g4 g7g6 
      Ng1f3 Ng8f6 Qg4g5 Nf6xe4 Qg5xe5+<br>
      <br>
      ___________________________________________________________________________________<br>
      <br>
      <br>
      Опубликованная версия Ifrit_j1_5<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 12 сентября 2009 г.<br>
      <br>
      Использование оценки из хеш-таблицы дало значительный прирост глубины в 
      эндшпиле. Но как тестировать это использование? И как коллизии в таблице 
      сказываются на игре? Я имею в виду не игру вообще, а моего движка.<br>
      Следует еще раз как можно основательнее протестировать поиск.<br>
      <br>
      Возьмем чистую альфа-бету и рассмотрим игру с использованием оценки, потом 
      без использования и потом с отключенной хеш-таблицей.<br>
      <br>
      FEN: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 <br>
      <br>
      Используем оценку из хеш-таблицы<br>
      Ifrit_j1_6_Beta_11_9_2009:<br>
      7/7 00:00 270.594 962.967 +0,12 Ng1f3 d7d5 c2c4 d5xc4 Qd1a4+ Qd8d7 Qa4xc4<br>
      8/8 00:01 617.865 573.158 0,00 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00<br>
      9/9 00:06 4.141.005 895.352 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/11 00:44 27.978.265 739.617 +0,02 e2e4 e7e5 Bf1c4 Bf8c5 Qd1g4 g7g6 
      Ng1f3 Ng8f6 Qg4g5 Nf6xe4 Qg5xe5+<br>
      11/11 03:43 159.687.121 890.241 +0,19 e2e4 d7d5 e4xd5 Qd8xd5 Nb1c3 Qd5e6+ 
      Qd1e2 Nb8c6 Qe2xe6 Bc8xe6 Bf1e2<br>
      <br>
      Проверка последнего варианта показала правильность оценки<br>
      1/1 00:00 30 3.000 +0,19 Bf1e2<br>
      <br>
      Не используем оценку из хеш-таблицы<br>
      Ifrit_j1_6_Beta_11_9_2009:<br>
      7/7 00:00 442.883 1.049.485 +0,12 Ng1f3 d7d5 c2c4 d5xc4 Qd1a4+ Qd8d7 
      Qa4xc4<br>
      8/8 00:02 927.332 570.665 0,00 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00<br>
      9/9 00:11 8.829.011 993.027 +0,12 Ng1f3 Ng8f6 e2e3 e7e6 Bf1d3 Bf8d6 00 00 
      Nb1c3<br>
      10/10 01:06 39.951.520 722.502 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      11/11 05:46 276.465.236 987.869 +0,18 e2e4 Nb8c6 Bf1b5 Nc6d4 Bb5c4 b7b5 
      Ng1e2 Nd4f3+ g2xf3 b5xc4 Nb1c3<br>
      <br>
      Не используем хеш-таблицу<br>
      Ifrit_j1_6_Beta_11_9_2009:<br>
      7/7 00:01 665.103 925.038 +0,12 Ng1f3 d7d5 e2e3 Bc8g4 Bf1d3 Bg4xf3 Qd1xf3<br>
      8/8 00:05 3.518.080 812.865 0,00 Ng1f3 Ng8f6 d2d4 c7c5 d4xc5 Qd8a5+ Qd1d2 
      Qa5xc5<br>
      9/9 00:29 20.965.788 857.391 +0,12 Ng1f3 Ng8f6 d2d4 c7c5 d4xc5 Qd8a5+ 
      Qd1d2 Qa5xc5 Nb1c3<br>
      10/10 03:00 119.126.460 791.459 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      При использовании оценки из хеш-таблицы не совпадают ни варианты, ни 
      оценки. Причем этому поиску удалось найти даже большую оценку чем 
      предыдущим! :) Ясно, что где-то закралось возмущение.<br>
      <br>
      В последних случаях оценки совпадают, но не совпадают варианты. Впрочем, 
      они и не обязаны совпадать.<br>
      Следует выяснить, что вносит такую нестабильность. Это либо варианты с 
      трехкратными повторами либо delta pruning, либо киллеры.<br>
      Буду тестировать дальше. И конечно следует доделать статическую оценку 
      позиции.<br>
      <br>
      ___________________________________________________________________________________<br>
      Воскресенье, 13 сентября 2009 г.<br>
      <br>
      Отключил варианты с трехкратным повтором.<br>
      Выяснил, что отключение повторов картину не изменило. Особенно важно, что 
      таинственная +0,19 осталась. Очевидно, что так быть не может. По оценкам 
      все три случая должны быть одинаковы.<br>
      <br>
      Отключил delta pruning<br>
      Я не понимаю как такое возможно. Получается что дело не в повторах и не в 
      delta pruning. Нестабильность, в принципе, может вносить статический 
      поиск. Ведь в нем отсечки зависят от альфы и беты. Если поиск пришел в 
      этот узел с другими альфой и бетой, то и оценка может быть другой. Если 
      это не так, значит, в программе где-то баг.<br>
      <br>
      Отключил статический поиск, т.е. продления только взятий.<br>
      Заметно, что когда оценка так скачет, эффективность хеш-таблицы 
      минимальна. Опять видим несовпадение оценок для поиска с оценкой. Где-то 
      что-то работает неправильно. Будем думать.<br>
      <br>
      Отключил киллеров.<br>
      Понятно, что совпадать должны только оценки. Варианты совпадать не 
      обязаны, но все равно это несовпадение неприятно. Видно, что в первых двух 
      случаях без киллеров варианты совпадают.<br>
      Вопрос тестирования поиска и источников нестабильности по-прежнему очень 
      острый.<br>
      Надо еще обдумать, может ли быть источником статическая оценка. Может там 
      где-то что-то прыгает случайным образом.<br>
      <br>
      Провел партию альфа-бета без сортировок против полного перебора. Глубина 
      игры 6 для альфа-беты и 5 для переборщика. Так что видно подтверждается 
      вариант и оценка или нет. Получил полное подтверждение и оценок, и 
      вариантов. Так что в самой альфа-бете вроде бы ошибок нет.<br>
      Теперь, если мы включаем форсированный поиск взятий, то картина не 
      меняется. И действительно ведь порядок ходов тот же самый. Какова картина 
      при произвольном порядке ходов, надо еще подумать.<br>
      Включенная в альфа-бета хеш-таблица уже меняет несколько линий вариантов, 
      хотя оценки остаются те же.<br>
      Хеш-таблица в полном переборе тоже упорядочивает ходы. Так что если ее в 
      нем включить, то опять должны совпадать и оценки и варианты.<br>
      Проверил. Действительно совпадают.<br>
      Остается вопрос с киллерами и с использованием оценки из хеш-таблицы.<br>
      <br>
      ___________________________________________________________________________________<br>
      Понедельник, 14 сентября 2009 г.<br>
      <br>
      Если включены киллеры, то варианты альфа-беты и полного перебора изредка 
      не совпадают. Проверил партией на глубине 6 оценки совпадают полностью а 
      варианты редко (три или четыре линии) расходятся.<br>
      Так же на тестовых позициях проверил, что сортировки не вносят аномалии в 
      количество позиций. Т.е. они ничего не глотают и не дублируют.<br>
      <br>
      Проверка метода использования оценки из хеш-таблицы показало наличие 
      искажения не только линии варианта, но и оценки этого варианта.<br>
      В чем дело не знаю. Будем думать.<br>
      <br>
      ___________________________________________________________________________________<br>
      Среда, 16 сентября 2009 г.<br>
      <br>
      Исходная позиция<br>
      Без использования оценки из хеша 10 полу ходов за 1 39<br>
      10/10 01:39 53.101.190 759.271 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      Без отклонений.<br>
      <br>
      Используем оценку 1го типа 10 полу ходов за 1 38 <br>
      10/10 01:38 53.041.270 769.059 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      При игре за белых отклонений не обнаружил. А вот за черных были отклонения 
      в разные стороны около 0,2 пешки.<br>
      <br>
      Используем оценку 2го типа 10 полу ходов за 1 26 <br>
      10/10 01:26 61.229.323 923.129 -1,04 e2e3 c7c5 Bf1c4 Qd8a5 c2c3 Ng8f6 
      Ke1f1 b7b5 Bc4e2 Qa5xc3<br>
      Отклонения до 0,4 пешки.<br>
      <br>
      Используем оценку 3го типа 10 полу ходов за 55 <br>
      10/10 00:55 33.059.076 825.177 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      За белых одно отклонение на 0,03 пешки. За черных без отклонений.<br>
      <br>
      Используем оценку всех типов 10 полу ходов за 43 <br>
      10/10 00:43 15.082.100 566.804 -1,07 c2c3 e7e6 d2d3 Qd8f6 Qd1d2 Bf8d6 
      Qd2g5 Bd6xh2 Qg5xf6 Ng8xf6<br>
      Отклонения до 0,2 пешки.<br>
      <br>
      Используем оценку 1+3го типа 10 полу ходов за 55<br>
      10/10 00:55 33.029.198 822.522 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      За белых одно отклонение на 0,03 пешки. За черных одно отклонение на 0,2 
      пешки.<br>
      <br>
      <br>
      Используем оценку 2+3го типа 10 полу ходов за 1 01 <br>
      Используем оценку1+2го типа 10 полу ходов за 1 07<br>
      <br>
      Оценка первого типа значит, что улучшили альфу или бету.<br>
      Оценка второго типа значит, что имеем локальный максимум или минимум.<br>
      Оценка третьего типа значит, что имеем отсечение по альфе или бете.<br>
      <br>
      Оценка второго типа может быть не точна ведь возможно, что она найдена в 
      поиске с нулевым окном.<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 19 сентября 2009 г.<br>
      <br>
      Поиск с нулевым окном стоит обдумать получше.<br>
      <br>
      Посмотрим за белых.<br>
      Раньше перерасчет был при условии if((value &gt; alpha) &amp;&amp; (value &lt; beta))<br>
      Сделал при условии if( value &gt; alpha )<br>
      <br>
      Проверка проводится альфа бета без оценки из хеш-таблицы с перерасчетом 
      при условии if((value &gt; alpha) &amp;&amp; (value &lt; beta))<br>
      <br>
      В результате получилось<br>
      <br>
      Исходная позиция<br>
      Без использования оценки из хеша 10 полу ходов за 2 58<br>
      10/10 02:58 105.853.052 810.166 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 
      Bc1d2 Bc8a6 Qd3f3 Ba6xe2<br>
      Счет стал дольше на 1 01.<br>
      Без отклонений.<br>
      <br>
      Используем оценку 1го типа 10 полу ходов за 2 56 <br>
      10/10 02:56 105.721.041 821.038 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 
      Bc1d2 Bc8a6 Qd3f3 Ba6xe2<br>
      Счет стал дольше на 1 мин.<br>
      При игре за белых отклонений не обнаружил. А вот за черных были отклонения 
      в разные стороны около 0,2 пешки.<br>
      Думаю, что при использовании такой оценки отклонений вообще быть не 
      должно. Непонятно, откуда они берутся.<br>
      <br>
      Используем оценку 2го типа 10 полу ходов за 1 31 <br>
      10/10 01:31 66.324.834 927.010 -1,03 e2e3 c7c5 Ng1h3 a7a6 Bf1e2 e7e5 Nb1c3 
      Qd8h4 Nh3g1 Qh4xf2+<br>
      Счет стал дольше на 5сек.<br>
      Отклонения до 0,6 пешки.<br>
      <br>
      Используем оценку 3го типа 10 полу ходов за 1 19 <br>
      10/10 01:19 48.674.710 837.414 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      Счет стал дольше на 24сек.<br>
      За белых одно отклонение на 0,03 пешки. За черных без отклонений.<br>
      <br>
      Используем оценку 1+3го типа 10 полу ходов за 1 19<br>
      10/10 01:19 48.596.484 835.622 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      За белых одно отклонение на 0,03 пешки. За черных одно отклонение на 0,3 
      пешки.<br>
      <br>
      Используем оценку всех типов 10 полу ходов за 45<br>
      10/10 00:45 15.983.369 571.487 -1,07 c2c3 e7e6 d2d3 Qd8f6 Qd1d2 Bf8d6 
      Qd2g5 Bd6xh2 Qg5xf6 Ng8xf6<br>
      Счет стал дольше на 2сек.<br>
      При такой игре проверка находит усиление в две пешки. Думаю, возможна и 
      большая цифра.<br>
      <br>
      В итоге мы видим, что пересчет при (value &gt;= beta) совершенно излишен. 
      Думаю, что дело в том, что нам не важна точная оценка, вызывающая отсечку 
      за бету, важен сам факт, что она отсекает. Конечно, такая оценка не точна, 
      но этой точности хватает, что бы принять решение о прекращении поиска.<br>
      <br>
      Конечно, для LMR все следует проверить по-новой. Там могут всплыть факты, 
      которых здесь либо не было, либо они были несущественны.<br>
      <br>
      Оценка второго типа не точна, потому что найдена поиском с нулевым окном и 
      пересчета нет.<br>
      Оценка третьего типа не точна, потому что найдена поиском с нулевым окном 
      и пересчета нет, кроме того, поиск не был завершен и как правило оценку за 
      противника можно усилить. Так что ее можно использовать только для 
      отсечений.<br>
      Оценка первого типа должна быть точна. Потому что был пересчет с полным 
      окном.<br>
      <br>
      Больше всего ускоряют оценки третьего типа, а использование первого и 
      второго почти бесполезно. Точнее, первого типа, похоже, вообще бесполезно. 
      Непонятно почему это так.<br>
      <br>
      Остается вопрос, почему при использовании оценок 1 и 3-го типов все-таки 
      есть отклонения. Тут надо думать.<br>
      <br>
      Решил немного переделать поиск с нулевым окном пересчет при повышении 
      локального максимума. Надеюсь, это сделает легитимным использование оценок 
      второго типа.<br>
      <br>
      Без использования оценки из хеша 10 полу ходов <br>
      было<br>
      10/10 01:39 53.101.190 759.271 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      стало<br>
      10/10 01:53 59.701.995 742.358 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      <br>
      Используем оценку всех типов 10 полу ходов<br>
      было<br>
      10/10 00:43 15.082.100 566.804 -1,07 c2c3 e7e6 d2d3 Qd8f6 Qd1d2 Bf8d6 
      Qd2g5 Bd6xh2 Qg5xf6 Ng8xf6<br>
      стало<br>
      10/10 00:45 15.248.555 547.033 -1,07 c2c3 e7e6 d2d3 Qd8f6 Qd1d2 Bf8d6 
      Qd2g5 Bd6xh2 Qg5xf6 Ng8xf6<br>
      То же самое.<br>
      <br>
      Теперь убрал нулевое окно<br>
      <br>
      Без использования оценки из хеша 10 полу ходов <br>
      10/10 03:16 107.784.127 770.486 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 
      Bc1d2 Bc8a6 Qd3f3 Ba6xe2<br>
      <br>
      Используем оценку всех типов 10 полу ходов<br>
      10/10 01:38 60.349.852 827.072 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      Даже без нулевого окна есть отклонение в 0,02 пешки! Это для меня 
      действительно непонятно.<br>
      Если же использование оценки из хеш-таблицы отключить то никаких 
      отклонений.<br>
      <br>
      ___________________________________________________________________________________<br>
      Четверг, 24 сентября 2009 г.<br>
      <br>
      Начальная позиция. Альфа-бета с использованием оценки из хеш-таблицы.<br>
      <br>
      Без нулевого окна.<br>
      10/10 01:41 63.369.817 842.291 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      <br>
      С нулевым окном.<br>
      10/10 00:55 32.511.199 811.501 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      <br>
      С нулевым окном. Без использования оценки из хеш-таблицы.<br>
      10/10 01:40 53.907.224 766.685 -1,07 d2d4 c7c6 c2c3 Qd8a5 Qd1d3 b7b6 Bc1d2 
      Bc8a6 Qd3f3 Ba6xe2<br>
      <br>
      Таким образом, очевидно, что лучше уж использовать нулевое окно без оценки 
      из кеша, чем без нулевого окна, но с оценкой из кеша.<br>
      <br>
      Все отклонения были связаны с тем, что при улучшении альфы за белых или 
      беты за черных мы пишем вариант, а поэтому не должны использовать оценку 
      из хеш-таблицы, ведь там оценка без варианта. <br>
      Все же остальное было правильно.<br>
      Итак, мы используем:<br>
      Оценку 3-го типа, т.е. при просмотре позиции было отсечение по альфе, при 
      поиске за черных или бете при поиске за белых, то мы можем использовать 
      эту оценку только если она равна или меньше альфы (поиск черных), равна 
      или больше беты (поиск белых)<br>
      Оценку 1-го и 2-го типов, если она меньше альфы при поиске за белых или 
      больше беты при поиске за черных.<br>
      <br>
      Посмотреть еще с добавлением остальных эвристик. Что и как влияет.<br>
      А дальше заниматься доводкой оценки до стандартного уровня.<br>
      <br>
      Включил просмотр взятий до конца с использованием оценки из хеш-таблицы.<br>
      10/10 00:30 15.896.696 656.400 +0,03 e2e4 Ng8f6 e4e5 Nf6d5 Ng1f3 Nd5f4 
      Nb1c3 Nb8c6 Nc3e2 Nf4d5<br>
      <br>
      ___________________________________________________________________________________<br>
      Пятница, 25 сентября 2009 г.<br>
      <br>
      Проверка показала, что delta pruning действительно порождает отклонения в 
      оценке. Причем как в плюс, так и в минус. Вопросом является, как велики 
      могут быть эти отклонения?<br>
      <br>
      ___________________________________________________________________________________<br>
      Воскресенье, 27 сентября 2009 г.<br>
      <br>
      delta pruning порождает отклонения в оценке<br>
      Продление на разменах в главной линии порождает отклонения в оценке.<br>
      LMR порождает отклонения в оценке.<br>
      Нулевой ход порождает отклонения в оценке.<br>
      <br>
      Имеется в виду то, что поиск без сортировки и на меньшей на полуход 
      глубине часто не подтверждает оценку после хода.<br>
      <br>
      Может, они работают не правильно, а может так и должно быть. Сегодня я не 
      могу сказать, насколько правильно они работают.<br>
      <br>
      Дальше планирую.<br>
      Еще раз проверить хеш-таблицу на коллизии, но уже со всеми эвристиками.<br>
      Переписать детектор ничьих повтором ходов. Сейчас реализация неполная.<br>
      Переписать статическую оценку. Мне кажется, что на данный момент оценка - 
      это самое слабое место программы.<br>
      <br>
      ___________________________________________________________________________________<br>
      Понедельник, 28 сентября 2009 г.<br>
      <br>
      То, что программа с шахами в статическом поиске видит на глубине в один 
      полуход, программа без шахов видит только на глубине три полухода. 
      Получается разница в два полу хода.<br>
      Это заставляет крепко задуматься о шахах в статическом поиске.<br>
      <br>
      ___________________________________________________________________________________<br>
      Вторник, 29 сентября 2009 г.<br>
      <br>
      Удалил IID из программы. Вдруг ясно понял, что, несмотря на то, что видимо 
      она есть во всех ведущих движках, я не смогу с ней примириться. Я просто 
      кожей чувствую, что она бесполезна в моей программе. В общем если я к ней 
      вернусь, то это будет не скоро и ради такого события можно ее написать по 
      новой. :) <br>
      ___________________________________________________________________________________<br>
      <br>
      Опубликованная версия Ifrit_j1_6<br>
      <br>
      ___________________________________________________________________________________<br>
      Среда, 30 сентября 2009 г.<br>
      <br>
      Что дальше?<br>
      1. Сделать нормальную статическую оценку позиции.<br>
      2. Сделать нормальный детектор ничьих трехкратным повторением.<br>
      3. Попробовать в корневом поиске сделать сортировку по уже найденным 
      оценкам ходов. Можно испробовать и другие методы.<br>
      4. Протестировать delta pruning. Надо понять, насколько большими бывают 
      отклонения и насколько они портят поиск.<br>
      5. Попробовать добавить продление на шахах в статическом поиске.<br>
      <br>
      Это работы месяца на три, не меньше. Учитывая конечно мои темпы.<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 3 октября 2009 г.<br>
      <br>
      Начал работать надо оценкой. <br>
      Начал с того, что подправил код Greko 6,5 (автор Владимир Медведев), так 
      что она полной альфа-бетой считает только материал. Получился хороший 
      контролер тактики.<br>
      У Ифрита тоже оставил только материал. Прогнал десятки партий и везде 
      видел совпадения оценки. Это радует, так как значит, что ошибки поиска в 
      этих программах, если есть, то хорошо спрятались.<br>
      Тактикой я тут называю последовательность ходов ведущих к выигрышу или 
      потере материала, т.е. как минимум пешки.<br>
      Еще раз наглядно увидел, что достижимая глубина поиска не способна 
      компенсировать плохую оценку позиции. Конечно, если бы мы считали до 
      конца, то хватило бы расчета материала. Но эта идея на сегодня безумна.<br>
      <br>
      Вспомним следующие параметры (таблица от WildCat он же Игорь Коршунов):<br>
      1. проходные -195<br>
      2. ценность полей -173<br>
      4. мобильность - 78<br>
      3. пешечный щит - 69<br>
      5. тяжелые фигуры - 29<br>
      6. пешечная структура - 25<br>
      7. очередность хода - 18<br>
      8. атака на короля - 9<br>
      9. паттерны - 0<br>
      <br>
      Элементы, отнимающие силу:<br>
      <br>
      Код: Выделить всё<br>
      10. разноцвет - 19<br>
      <br>
      ___________________________________________________________________________________<br>
      Вторник, 6 октября 2009 г.<br>
      <br>
      Альфа-бета поиск достаточно надежный фундамент, обеспечивающий полный 
      поиск. Остается выяснить, какого рода искажения вносят нулевой ход и LMR.<br>
      Нулевой ход и LMR как они реализованы у меня вместе, довольно причудливо 
      искажают поиск. Они дают существенный прирост глубины, но какой ценой. Мне 
      это не ясно и тут надо еще много исследовать.<br>
      <br>
      Сейчас сделал таблицы PST (piece square tables) остается их тщательно 
      протестировать, но уже сейчас очевидна их ограниченность. Только таблицами 
      нормальную оценку не сделать. Ясно, что не обойтись без анализа пешечной 
      структуры и блокированы ли проходные. <br>
      <br>
      Сегодня ясно, что даже очень глубокий поиск проигрывает, если считаем 
      только материал. Следующий шаг это pst. Но и их оказывается недостаточно 
      для достойной игры.<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 17 октября 2009 г.<br>
      <br>
      Сделал сортировку по оценкам из предыдущих итераций в корневом поиске 
      (выполнил пункт 3).<br>
      <br>
      Функцию, использующую хеш-таблицу, разделил на две. Одна работает с 
      хеш-оценкой, а другая с хеш- ходом.<br>
      <br>
      Продолжил тестирование использование оценки из хеш-таблицы. Тесты 
      показали, что использовать можно только те оценки, что вызывали отсечение 
      за альфа для черных или бета для белых. В случае нулевого окна так 
      называемая точная оценка временами не совпадает. Отказываться от нулевого 
      окна я не собираюсь, и оставлять явную нестабильность тоже. Поэтому просто 
      отказался от такого использования оценки.<br>
      Причина несовпадения не ясна. Может ошибки где-то в поиске. Может это 
      нулевое окно. Может плавающие альфа-бета пределы. Не совпадают не только 
      оценки, но и лучший ход. Надо будет еще подумать и поэкспериментировать.<br>
      В итоге пришел к выводу, что когда за белых итоговая оценка меньше альфы, 
      она не стабильна и зависит даже от порядка ходов. Тем не менее, если она 
      меньше альфы, то всегда остается меньше альфы хоть и плавает. Это меня 
      вполне устраивает.<br>
      <br>
      ___________________________________________________________________________________<br>
      <br>
      Опубликованная версия Ifrit_j1_7<br>
      <br>
      ___________________________________________________________________________________<br>
      Суббота, 24 октября 2009 г.<br>
      <br>
      Что дальше?<br>
      1. Сделать нормальный детектор ничьих трехкратным повторением.<br>
      2. Попробовать добавить динамическое сокращение глубины перебора для 
      нулевого хода.<br>
      3. Модернизировать LMR.<br>
      4. Сделать нормальную статическую оценку позиции.<br>
      <br>
      Очередная попытка реализовать поиск стремления(aspiration search), только 
      теперь уже с динамическим окном. Все попытки привели к незначительному 
      увеличению времени счета и к существенному искажению рисунка игры. Идея 
      выглядит заманчиво, но почему-то не работает. Видимо, потому что я и так 
      все выжал поиском в нулевом окне. А может быть, где-то ошибка. В любом 
      случае останавливаться на нем не буду. Может быть, в будущем вернусь, а 
      сейчас и без этого есть что улучшать и тестировать.<br>
      <br>
      ___________________________________________________________________________________<br>
      <br>
      Опубликованная версия Ifrit_j1_8<br>
      Опубликованная версия Ifrit_j1_9<br>
      <br>
      ___________________________________________________________________________________<br>
      Среда, 11 ноября 2009 г.<br>
      <br>
      Выполнил еще два пункта:<br>
      1. Сделать нормальный детектор ничьих трехкратным повторением.<br>
      2. Попробовать добавить динамическое сокращение глубины перебора для 
      нулевого хода.<br>
      <br>
      Что значит пункт 3 «Модернизировать LMR» я уже не помню. <br>
      А с оценкой как всегда затормозил :) Почему-то оценка у меня никак не 
      идет.<br>
      Но все-таки доделал проходные.<br>
      <br>
      Сейчас занялся просмотром и редактированием кода. Удаляю лишние строки, и 
      все нестыковки, что накопились за прошедшие переделки.<br>
      Привожу в соответствие комментарии.<br>
      После долгих колебаний удалил сортировку по истории. Она работает во всех 
      движках, в том числе самых сильных. Но почему-то у меня эта сортировка не 
      дает прироста. Действительно количество рассмотренных позиций уменьшается, 
      но выгода от этого съедается потерей в скорости.<br>
      <br>
      У меня очень забавная сортировка корневого списка. Тесты показывают, что, 
      как правило, оценки всех ходов одинаковы. При этом сортировка реально 
      ускоряет счет! К тому же то, что изначально список не инициализирован 
      делает варианты непредсказуемыми, хотя и одинаковыми по оценке. Так в один 
      момент программа может играть e4, а в другой раз захочет d4. Я не сразу 
      понял, что к чему :) Возможно, где то еще есть источники нестабильности. 
      Надо искать.<br>
      Конечно, это забавно, но для тестов нежелательно.<br>
      <br>
      Пока редактирую код, запишу, что еще хотелось бы сделать.<br>
      1. Таблицу хеш-ключей. Не генерировать их каждый раз заново, а один раз 
      насчитать таблицу и проверить, чтобы не было совпадений.<br>
      2. Сделать нормальное распределение времени на счет. Сейчас оно слишком 
      примитивное. Я просто оставшееся время делю на сто. :)<br>
      3. Разобраться с инициализацией хеш-таблицы.<br>
      4. Разобраться с поведением таймера.<br>
      <br>
      ___________________________________________________________________________________<br>
      <br>
      Опубликованная версия Ifrit_j2_0<br>
      <br>
      <br>
&nbsp;</p>
      <p align="left">&nbsp;<p align="left">&nbsp;<p align="left">&nbsp;<p align="left">&nbsp;<p align="left"><br>
      <br>
&nbsp;</tr>
</table>
<p align="left">&nbsp;</p>
</font>
</body>