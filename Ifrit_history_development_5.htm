<!DOCTYPE html>
<html>

<head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
 <!-- Copyright (c) 2006-2019, Brenkman Andrey and/or its affiliates. All rights reserved. -->
 <title>Дневник разработчика шахматной программы часть 5</title>
</head>

<body>

<table border="0" cellspacing="10" width="100%" id="AutoNumber1"  bgcolor="#CCCCFF">
  <tr>
    <td width="100%">
    <table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber2">
      <tr>
        <td width="75%">
    <h2 align="center">Ifrit </h2>
    <h2 align="center">История разработки.</h2>
        </td>
        <td width="25%">
        <p align="center"><a href="ifrit_chess_engine.html">на главную страницу</a></td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td width="100%">
      <p class="MsoNormal"><span style="font-size:14.0pt">&nbsp;<br>
      </p>
      <p align="center"><a href="Ifrit_history_development_4.htm">Ifrit_<span lang="en-us">j</span> История разработки. <br >
      часть 4 </a></p>


<font size="4">

      Часть 5<br>
      <br>
      ___________________________________________________________________________________________
      <br>     
      Среда, 17 сентября 2008 г.<br>
      Ifrit_b2_7<br>
      Методы futility pruning и late move reductions неожиданно много прибавили 
      к глубине <br>
      перебора. Так, если раньше блиц игрался на глубине 7-9, то после их 
      введения 9-12. Мне это <br>
      очень понравилось. Проверка на тактику показала решение около 50% 
      процентов позиций. Надо <br>
      сказать, что больше всего меня устраивает чистый полный перебор. Но у него 
      есть фатальный <br>
      недостаток – безобразно маленькая глубина расчета. Именно поэтому 
      приходится добавлять <br>
      разного рода оптимизации и эвристики. Последние две эвристики вообще 
      кажутся мне <br>
      подозрительными, но деваться некуда ведь только с ними достигается 
      приемлемая глубина <br>
      основного перебора. Что бы выигрывать нужно, видеть тактические удары, а 
      для этого нужна <br>
      глубина. <br>
      Из эвристик до сих пор не сделал history и еще думаю нужно реализовать IID. 
      В форсированном <br>
      поиске тоже бездна для всяких экспериментов.<br>
      ___________________________________________________________________________________________
      <br>
      Четверг, 18 сентября 2008 г.<br>
      Сегодня прочитал свой дневник про разработку Джина. Последняя запись в нем 
      от 5 января 2007 <br>
      г. Прошло не так уж много времени, а мне кажется, что прошла уже вечность. 
      В Джине ничего <br>
      нет, кроме полного перебора и генератора ходов. Причем, даже шаха и мата 
      не было. <br>
      Добавление рокировки, взятия на проходе, превращение пешек давалось с 
      колоссальным трудом. <br>
      Все шло на грани моих возможностей. <br>
      Сейчас пришло в голову, что ведь до сих пор я не обращал внимания, как это 
      сделано в других <br>
      программах. Генерация и реализация ходов сделана мною самостоятельно, без 
      всяких <br>
      заимствований, как в Джине, так и в Ифрите, а это значит, что там есть что 
      оптимизировать, <br>
      и есть что заимствовать из других движков :)<br>
      На мой взгляд, между Джином и Ифритом бездна и кажется удивительным, что 
      их отделяет такой <br>
      маленький промежуток времени. Это тем более удивительно, если вспомнить 
      что я пишу его <br>
      урывками, и очень редко удается работать над ним каждый день в течение 
      недели.<br>
      Прошла целая эпоха, и сейчас интересно посмотреть, какие идеи получили 
      развитие.<br>
      Должен сказать, что выбор Си++ было очень правильным решением. Это 
      колоссально мощный язык <br>
      и Джава на его фоне смотрится не лучше старого Бейсика. С тех пор я 
      полюбил этот язык, хотя <br>
      должен признать, что его мощность позволяет создавать чудовищ похлеще 
      Франкенштейна! Я не <br>
      утверждаю что Си++ лучше Джавы или Дельфи. Тут решающую роль играет не 
      язык, а уровень <br>
      программиста. Но конечно однозначно старый Бейсик на порядок хуже этих 
      трех при написании <br>
      движков. А вот зачем вообще нужен новый Бейсик, я не знаю. Он потерял 
      простоту старого <br>
      бейсика так, что лучше уж писать на Си++, чем врубаться в этого монстра. 
      Лучшие движки <br>
      написаны на Си++, а это значит что это подходящий инструмент :)<br>
      С другой стороны, я все еще недоволен читаемостью и прозрачностью кода. 
      Точнее некоторые <br>
      места, по-моему, слишком усложнены и хотелось бы их упростить. В первую 
      очередь речь идет о <br>
      переборе. Многие места далеки от оптимальности. Но в целом уровень проекта 
      в данный момент <br>
      меня устраивает. <br>
      <br>
      Что дальше? <br>
      Следует как можно полнее описать текущий уровень. С одной стороны это 
      поможет начинающим, а <br>
      с другой я сам смогу увидеть недостатки и то куда двигаться дальше. 
      Описание алгоритмов я <br>
      уже начал выкладывать на сайте и продолжу это в дальнейшем.<br>
      <br>
      Конечно, очевидно, что дальнейшее развитие идет по двум направлением 
      оптимизация старых <br>
      методов и добавление новых. Причем, оптимизация одного метода обычно дает 
      мало, но если <br>
      пройти по всем, то в итоге прирост оказывается существенным. Что такое 
      оптимизация? Это <br>
      тщательное тестирование для того, что бы точно знать, что все работает так 
      как должно <br>
      работать. Для этого следует добавлять тестовые функции, которые 
      расположить в тестовом <br>
      модуле. Тестирование и наглядное представление основных параметров методов 
      и результатов их <br>
      работы. А с другой стороны следует ускорять код, делая его максимально 
      быстрым. И так код <br>
      должен быть полностью протестирован максимально быстро и с достаточными 
      комментариями.<br>
      Добавление новых методов часто дает принципиальное улучшение недостижимое 
      никакой <br>
      оптимизацией старого кода. В качестве примера можно привести полный 
      перебор и альфа-бета <br>
      оптимизацию. Даже корявая а-б с элементарной сортировкой все равно быстрее 
      идеального <br>
      полного перебора. <br>
      <br>
      Из новых методов на очереди history, IID, SEE, verification search, 
      razoring. Что добавлять <br>
      после этого я не знаю. Кстати, эффективность этих методов для Ифрита тоже 
      под большим <br>
      вопросом.<br>
      <br>
      ___________________________________________________________________________________________
      <br>
      Пятница, 19 сентября 2008 г.<br>
      IID у меня не работает. Возможно, пока кривая реализация. Надо думать.<br>
      Достаточно основательно все посмотрел.<br>
      Вроде работает, как должно, но все равно время перебора с IID только 
      увеличивается и не <br>
      важно включен хеш или нет. <br>
      Мне кажется, что сама идея подсовывать ход, который был лучшим при 
      переборе на меньшую <br>
      глубину, не очень эффективна. В моей программе с такой задачей призвана 
      справляться <br>
      хеш-таблица. Но даже с отключенным хешем эффекта я не вижу. Видимо слишком 
      часто у меня <br>
      меняется лучший ход при изменении глубины. Вероятно, эффективность этого 
      метода в других <br>
      программах не связанна с лучшим ходом. Может, дело в упорядочивании хеша 
      или истории.<br>
      <br>
      В razoring я не верю. По-моему futility pruning хватит выше крыши. Но все 
      равно надо будет <br>
      проверить, вдруг меня ждет сюрприз :)<br>
      <br>
      Насколько я понимаю, verification search призван решить проблему цугцванга 
      в нулевом ходе. <br>
      По-моему метод очень интересный.<br>
      <br>
      Давно уже хочу реализовать history. Думаю, он слегка ускорит перебор.<br>
      <br>
      Еще один интересный метод это SEE. Но его буду добавлять в быстрый поиск 
      вместе с <br>
      детектором шахов.<br>
      <br>
      Пока что это все известные мне методы.<br>
      <br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 20 сентября 2008 г.<br>
      Сегодня еще тестировал IID. Метод функционирует, вот только он мне не 
      помогает из-за того, <br>
      что у меня на разных глубинах лучший ход разный. Приведу пример:<br>
      1/1 00:00 20 1 +0,29 Nb1c3<br>
      2/2 00:00 39 1 0,00 Nb1c3 Nb8c6<br>
      3/3 00:00 465 1 +0,29 Nb1c3 Nb8c6 Ng1f3<br>
      4/4 00:00 969 1 0,00 Nb1c3 Nb8c6 Ng1f3 Ng8f6<br>
      5/5 00:00 13.452 934.063 +0,29 Nb1c3 Nb8c6 e2e4 Ng8f6 Bf1e2<br>
      6/6 00:00 55.796 649.000 0,00 d2d4 Ng8f6 Ng1f3 d7d5 Bc1d2 Bc8d7<br>
      7/7 00:01 594.900 835.183 +0,47 Ng1f3 d7d5 e2e3 Bc8f5 Bf1e2 Nb8d7 00<br>
      8/8 00:07 2.855.595 605.856 -0,08 e2e3 Ng8f6 Bf1b5 e7e6 Ng1f3 Bf8d6 00 00<br>
      9/9 00:34 18.807.906 818.937 +0,39 Nb1c3 Ng8f6 Ng1f3 e7e6 e2e4 Bf8b4 Bf1d3 
      00 <br>
      00<br>
      <br>
      Видно, что с 6 по 9 глубину все первые ходы разные. По-моему при таком 
      разбросе данный <br>
      метод и не должен работать.<br>
      Почему же они так скачут? Может у меня в а-б баг? Проверить это 
      проблематично, так как <br>
      полный перебор можно посмотреть до глубины 6, а дальше уже завал. Приведем 
      полный перебор <br>
      на глубину 6. Видно, что варианты совпадают с а-б.<br>
      1/1 00:00 20 1 +0,29 Nb1c3<br>
      2/2 00:00 400 1 0,00 Nb1c3 Nb8c6<br>
      3/3 00:00 8.902 621.467 +0,29 Nb1c3 Nb8c6 Ng1f3<br>
      4/4 00:00 197.281 573.897 0,00 Nb1c3 Nb8c6 Ng1f3 Ng8f6<br>
      5/5 00:10 4.865.609 516.098 +0,29 Nb1c3 Nb8c6 e2e4 Ng8f6 Bf1e2<br>
      6/6 05:12 119.060.324 411.652 0,00 d2d4 Ng8f6 Ng1f3 d7d5 Bc1d2 Bc8d7<br>
      <br>
      Кстати, только что заметил интересное дело - четные оценки более высокие, 
      чем не четные, <br>
      т.е. для позиционного фактора эффект горизонта продолжает работать. Это и 
      понятно – если <br>
      последний ход был за мной, противник еще меня не опроверг, и мои фигуры 
      стоят более <br>
      выгодно. Для тактики мы эффект горизонта убрали продолжением на взятиях а 
      вот для <br>
      позиционности нет.<br>
      ___________________________________________________________________________________________
      <br>
      Воскресенье, 21 сентября 2008 г.<br>
      Продолжил тестирование IID. Все-таки хочется понять, почему он у меня не 
      работает, ведь он <br>
      есть почти во всех движках.<br>
      <br>
      Чистая а-б без сортировок:<br>
      7/7 00:02 1.866.372 924.124 +0,47 Ng1f3 d7d5 e2e3 Bc8f5 Bf1e2 Nb8d7 00<br>
      8/8 00:26 15.305.274 739.296 -0,08 d2d4 Nb8c6 e2e4 Ng8f6 Nb1c3 d7d5 e4xd5
      <br>
      Nf6xd5<br>
      9/9 03:04 117.776.781 854.775 +0,37 e2e4 Ng8f6 Nb1c3 e7e6 Bf1b5 c7c6 Bb5e2 
      d7d5 <br>
      d2d3<br>
      <br>
      С включенным IID:<br>
      7/7 00:02 1.235.168 939.478 +0,47 Ng1f3 d7d5 e2e3 Bc8f5 Bf1e2 Nb8d7 00<br>
      8/8 00:13 7.867.339 781.959 -0,06 e2e3 d7d5 c2c4 e7e6 c4xd5 e6xd5 Bf1e2 
      Bc8d7<br>
      9/9 01:20 46.190.892 834.662 +0,37 e2e4 Ng8f6 Nb1c3 e7e6 Bf1b5 c7c6 Bb5e2 
      d7d5 <br>
      d2d3<br>
      <br>
      Можно видеть, что ускоряет, где то раза в 2. Надо сказать это очень плохое 
      ускорение.<br>
      <br>
      Простая сортировка взятий + по централизации дает:<br>
      7/7 00:01 594.900 818.747 +0,47 Ng1f3 d7d5 e2e3 Bc8f5 Bf1e2 Nb8d7 00<br>
      8/8 00:07 2.855.595 604.193 -0,08 e2e3 Ng8f6 Bf1b5 e7e6 Ng1f3 Bf8d6 00 00<br>
      9/9 00:34 18.807.906 817.079 +0,39 Nb1c3 Ng8f6 Ng1f3 e7e6 e2e4 Bf8b4 Bf1d3 
      00 <br>
      00<br>
      <br>
      А если еще + IID:<br>
      7/7 00:01 615.142 832.484 +0,47 Ng1f3 d7d5 e2e3 Bc8f5 Bf1e2 Nb8d7 00<br>
      8/8 00:06 2.772.454 615.422 -0,08 e2e3 Ng8f6 Bf1b5 e7e6 Ng1f3 Bf8d6 00 00<br>
      9/9 00:37 19.796.627 768.466 +0,37 e2e4 Ng8f6 Nb1c3 e7e6 Bf1b5 c7c6 Bb5e2 
      d7d5 <br>
      d2d3<br>
      <br>
      Видно, что эта сортировка тормозит, а не разгоняет!<br>
      <br>
      Для сравнения хеш все-таки слегка разгоняет:<br>
      7/7 00:01 488.618 835.887 +0,47 Ng1f3 d7d5 e2e3 Bc8f5 Bf1e2 Nb8d7 00<br>
      8/8 00:04 1.375.231 575.231 -0,08 e2e3 Ng8f6 Bf1b5 e7e6 Ng1f3 Bf8d6 00 00<br>
      9/9 00:24 13.086.523 763.018 +0,39 Nb1c3 Ng8f6 Ng1f3 e7e6 e2e4 Bf8b4 Bf1d3 
      00 <br>
      00<br>
      <br>
      Я думаю, что дело не в том, что метод криво реализован, а в том, что у 
      меня слишком сильно <br>
      меняется лучший ход при переходе на следующую глубину. Видимо, все-таки в 
      поиске есть баги. <br>
      Например, видно, что лучший вариант на 9 оценивается по-разному, но так 
      быть не может.<br>
      Тест полного перебора показывает, что сортировки не теряют и не добавляют 
      ходы. <br>
      Что-то не то в форсированном варианте. Когда его отключаю, варианты 
      совпадают, и методика <br>
      IID разгоняет поиск.<br>
      Есть в нем какая-то нестабильность. Может, так и должно быть из-за 
      статической оценки.<br>
      <br>
      Пригляделся получше к форсировке и что-то она мне показалась непонятной. 
      Похоже, это <br>
      главный источник нестабильности, из-за которого не работает IID и при 
      различных сортировках <br>
      получается лучший вариант с разными оценками. Тут надо думать.<br>
      Форсаж слегка подправил и вроде заработал IID, хоть и слабо.<br>
      ___________________________________________________________________________________________
      <br>
      Пятница, 26 сентября 2008 г.<br>
      Обязательно нужен нормальный детектор ничьих при трехкратном повторе 
      позиций. Из-за <br>
      недоработки этого момента движок упускает очень много побед. До сих пор 
      обходил стороной <br>
      проблему цугцванга. Тут тоже надо будет доработать <br>
      и может быть verification search мне в этом поможет. И, конечно же, 
      обязательно сделать <br>
      history. После этого разработку движка первого круга можно будет считать 
      законченной. Над <br>
      введением SEE и razoring надо будет хорошо подумать.<br>
      Насколько я сейчас себе представляю, если первый круг был debug, т.е. 
      разработка то второй <br>
      круг будет beta, т.е. тестирование и шлифовка.<br>
      Сейчас при добавлении методов я смотрю, что вроде работает и вроде 
      ускоряет, но полного <br>
      тестирования, конечно же, нет.<br>
      ___________________________________________________________________________________________
      <br>
      Пятница, 10 октября 2008 г.<br>
      Запихать в движок все известные методы - это не очень хорошая идея. Так, 
      например razoring, <br>
      если и буду добавлять, то в последнюю очередь, когда уже совсем нечего 
      будет улучшать? ну <br>
      или ради эксперимента. Я считаю, что иметь razoring в программе, где уже 
      есть futility <br>
      pruning и LMR, это верх идиотизма :)<br>
      Нормальный детектор трехкратного повторения пока не получается. У меня 
      что-то не то с <br>
      генерацией ключа хеш-таблицы. Тут будет очень много тестов и кода, который 
      заметно усложнит <br>
      движок. Пока я на это не пойду. Так что это пропускаем.<br>
      Остается только history. Надо добавить и оттестировать этот метод. После 
      этого никаких <br>
      новых методов добавлять не планирую. Буду доводить и оттачивать то, что 
      есть. Надо будет <br>
      написать тесты всех значимых моментов и попытаться реализовать их 
      максимально эффективно.<br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 8 ноября 2008 г.<br>
      После всех оптимизаций генератор работает на скорости 8-10 млн. поз. в 
      сек. Выяснилась <br>
      интересная особенность – целого числа не хватает для подсчета позиций при 
      тесте. Так на <br>
      глубине 7 в начальной позиции их уже около 3 миллиардов. Раньше это было 
      не актуально, а <br>
      сейчас видимо стоит расширить диапазон. Конечно, без знакового числа на 
      конкретный случай <br>
      хватит. Но для других и этого мало. В итоге сделал 64-битное целое. 
      Заметил ошибку в Арене. <br>
      Она не правильно печатает число на глубине 7. Ифрит выводит 3195901860, а 
      Арена печатает <br>
      3.195.900 860. Как 1 превращается в 0 с пробелом для меня непостижимо. 
      Сбоит она и при <br>
      выводе скорости перебора. Вещественное число отображает как 1.<br>
      Кстати историю я добавил. Честно говоря, ускорения почти не видно, а 
      скорость перебора <br>
      упала. Тут надо будет еще думать.<br>
      В данный момент я перешел на бета-версию. Теперь только тестируем и 
      оптимизируем методы. <br>
      Ничего нового добавлять не буду, так как смысла нет. Сейчас надо довести 
      до ума то, что <br>
      есть.<br>
      ___________________________________________________________________________________________
      <br>
      Пятница, 21 ноября 2008 г.<br>
      Появилось желание написать новый генератор. Или майлбукс или магический 
      битбоард. И в том и <br>
      в другом случае хочется увеличить скорость и уйти от 64 битных чисел. 
      Действительно ли мне <br>
      это сейчас нужно? Нет, конечно. Видимо увеличение скорости раз в 5 даст 
      всего полу ход. А <br>
      такого ускорения точно не будет. И даже если бы оно было, это ничего не 
      изменит, так как <br>
      другие части программы на порядок медленнее, я имею в виду форсированный 
      поиск и оценку. <br>
      Они замедляют перебор с 10 млн. до 200 тысяч. Зачем еще напрягаться с 
      генератором? На <br>
      данном этапе это не имеет значения и совершенно не в тему.<br>
      Копаться с уклонениями тоже сейчас не нужно. Так что с генератором 
      закончим.<br>
      Дальше идет форсированный поиск. Сейчас его надо протестировать и 
      оптимизировать. Может, <br>
      стоит перейти на SEE. Еще разобраться с шахами. В общем, действительно 
      нужных дел очень <br>
      много.<br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 6 декабря 2008 г.<br>
      В форсированном поиске нашел несколько ляпов. Главный конечно то, что я 
      позиционную оценку <br>
      считал в основном поиске, а в форсированном варианте только материал. Так 
      конечно быстро, <br>
      но не правильно. Главным образом, потому что позиционные бонусы часто 
      дороже пешки. <br>
      Главный вопрос, на который я хотел бы получить ответ как движкам удается 
      так быстро <br>
      углубляться. Также стоит сказать, что у меня кошмарная оценка эндшпиля. Ее 
      точно надо <br>
      переделывать.<br>
      ___________________________________________________________________________________________
      <br>
      Воскресенье, 18 января 2009 г.<br>
      Выпустил Ифрит 3.5<br>
      Давно я уже не писал. Все время уходило на оптимизацию кода. Из эвристик 
      добавил только <br>
      дельта прунинг (delta pruning). В остальном тестировал и переписывал. 
      Стоит сказать, что <br>
      только форсированные варианты я переписывал раз семь! В результате код 
      получился довольно <br>
      взъерошенным, комментарии часто не соответствуют реальности. Надо будет 
      причесывать. Особо <br>
      выделил основной вариант (pv) что позволило, наконец, включить продления 
      на разменах и <br>
      увеличило стабильность оценки в силу того, что в основном варианте 
      использую только а-б без <br>
      других отсечений. <br>
      До сих пор не детектирую ничью в возможных вариантах. Нужно еще сделать 
      продление на <br>
      единственном ответе. И конечно стоит довести оценку до нормального уровня. 
      Это очевидные <br>
      недоработки. Но есть и новые идеи, хотя как они будут работать, и вообще 
      будут ли работать <br>
      это большой вопрос.<br>
      <br>
      Дальнейшие планы. Напишу, чтобы самому понять, что же я хочу. :)<br>
      Привести в порядок систему тестов. Привести в порядок комментарии. 
      Продолжить описание <br>
      эвристик на сайте. <br>
      Добавить детектирование ничьих в варианте. Добавить продление на 
      единственном ответе.<br>
      Видимо стоит уже задуматься о выводе настроек в таблицу и файл. Также не 
      помешает вывод <br>
      нескольких вариантов в режиме анализа. <br>
      Насчет уклонения от шахов, о шахах в форсированном варианте и SEE нужно 
      еще думать. А <br>
      оптимизация оценки - это вообще тема вечная :)<br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 31 января 2009 г.<br>
      Добавил комментариев. Прокомментировал параметры функций. <br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 7 февраля 2009 г.<br>
      Вызвал функции в цикле 2147483647 и еще внутренний на 20. Оказалось, что 
      глобальная <br>
      переменная ужасно тормозит выполнение(40 сек против 0). Тоже самое 
      происходит, если в <br>
      локальной переменной ставим префикс static. Они аналогичны.<br>
      Инициализация локальной переменной не влияет на скорость. Вызов констант 
      из глобальных <br>
      массивов не тормозит. Структура, переданная по ссылке и по значению, не 
      тормозит. <br>
      Глобальная структура не тормозит. Это значит, что глобальная переменная 
      завернутая в <br>
      структуру перестает тормозить. Глобальный массив не тормозит.<br>
      Почему тормозит глобальная переменная? Я не знаю, но это факт.<br>
      <br>
      Превратил все глобальные переменные либо в структуры, либо в массивы. 
      Никакого прироста <br>
      скорости нет.<br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 14 марта 2009 г.<br>
      Переделал проект на объектную модель. Вижу, что это был очень правильный 
      шаг. Добавил <br>
      распознавание ничьих трехкратным повторением в строке размышления.<br>
      В данный момент (Ifrit_j1_1) следует заняться оценкой. Надо сказать, что 
      оценка всегда была <br>
      самым слабым местом. Главным образом, потому что возиться с ней мне не 
      интересно.<br>
      Тестирование и оптимизация это непрерывный процесс. В данный момент 
      уровень тестов меня <br>
      совершенно не устраивает.<br>
      ___________________________________________________________________________________________
      <br>
      Воскресенье, 15 марта 2009 г.<br>
      В игре есть два аспекта. Первый - это глубина перебора. Чем он полнее и 
      глубже, тем более <br>
      глубокие и неочевидные тактические удары видит программа. Таким образом, 
      делают все <br>
      возможное, чтобы смотреть как можно глубже. Тактическим ударом я называю 
      вариант, при <br>
      котором отыгрывается материал. <br>
      Нужно понимать основную антиномию. Смотреть надо как можно глубже, но для 
      этого нужно как <br>
      можно больше отсекать. Но чем больше отсекаешь, тем больше вероятность, 
      что отсечешь что-то <br>
      нужное и пропустишь тактический удар.<br>
      <br>
      Второй аспект - это оценка позиции. Если она кривая, то компенсировать 
      глубиной перебора <br>
      проблематично. Без корректной оценки игра будет слабой и глубина перебора 
      тут не поможет. И <br>
      так оценка имеет принципиальное значение.<br>
      <br>
      Следует сказать, что без приведения оценки в порядок дальнейшая 
      оптимизация перебора <br>
      бессмысленна. Таким образом, еще раз подтверждаю, что сейчас следует 
      заняться оценкой.<br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 9 мая 2009 г.<br>
      Тестирование. <br>
      <br>
      Первый этап.<br>
      Тестировать начал с самого начала. Это чистый полный перебор. Особенность 
      такая, что на <br>
      нечетной глубине оценка завышена. Так как программа видит, что можно взять 
      материал, но не <br>
      видит, что он отыгрывается. На четной наоборот занижена, потому что 
      программа не понимает, <br>
      что фигура защищена. Это создает дикую слабость и непредсказуемость игры.<br>
      И именно здесь видно, что продление взятий до конца абсолютно необходимо.<br>
      На этом уровне тестируется генератор позиций. У нас есть позиции с 
      количеством возможных <br>
      узлов на фиксированных глубинах. Их легко найти в интернете. Таким 
      образом, мы можем <br>
      увидеть, что генератор работает нормально, а это значит, что все узлы 
      (позиции) <br>
      сгенерированы.<br>
      Далее следует убедиться, что линия варианта, первый ход и оценка 
      соответствуют конечной <br>
      позиции.<br>
      Думаю, что на данном этапе тест оценки позиции невозможен. О какой 
      позиционной оценке может <br>
      идти речь, если программа зевает фигуры? :)<br>
      ___________________________________________________________________________________________
      <br>
      Воскресенье, 10 мая 2009 г.<br>
      <br>
      Второй этап.<br>
      Подключаем продление взятий. Следует проверить правильность линий взятий. 
      И здесь следует <br>
      тестировать и оптимизировать оценку позиции. Линию взятий проверил. Вроде 
      все корректно.<br>
      <br>
      Однако вскрылся один недостаток, связанный с шахами. Так как шахи не 
      учитываются, то <br>
      программа не видит мата и выигрыш материала посредством шахов и вскрытых 
      шахов.<br>
      В дальнейшем это надо как-то исправлять. Возможно, сделаю это посредством 
      оценки.<br>
      <br>
      Оценка, конечно, требует существенной доработки. Сейчас она во многом 
      нелогична. Главным <br>
      образом это касается эндшпиля. <br>
      ___________________________________________________________________________________________
      <br>
      Среда, 13 мая 2009 г.<br>
      <br>
      Третий этап.<br>
      Включаем альфа-бета оптимизацию перебора. Здесь следует проверять не 
      только а-б, но и все <br>
      сортировки. Так же тут следует проверить футилити (futility pruning). 
      Таким образом, этап <br>
      очень обширный.<br>
      <br>
      Придумал метод проверки а-б. А-б играет на глубине 4, а полный перебор на 
      глубине 3. Таким <br>
      образом, оценки должны совпадать. Если нет сортировки, то и варианты. А 
      вот если есть <br>
      одинаковые сортировки там и там, то нужно думать.<br>
      Ну а если сортировки различные, то оценки должны совпадать, а вот варианты 
      не должны.<br>
      <br>
      Однако я заметил расхождения.<br>
      Первое было из-за детектора ничьих. Его отключил. Буду тестировать 
      отдельно.<br>
      И второе было из-за дельта прунинга в форсированном варианте. Пока тоже 
      отключил. Буду <br>
      тестировать отдельно.<br>
      <br>
      Включение киллеров расхождения в оценке не дали. Или я их пока не заметил.<br>
      На самом деле у меня сейчас включены сортировки по материалу, истории и 
      киллерам. Как я уже <br>
      говорил, расхождения в оценке я пока не видел. Надо будет продолжить 
      тестирование.<br>
      <br>
      Несмотря на то, что хеш-таблица и внутренняя итерация относятся к 
      сортировке, они <br>
      настолько неопределенны что буду тестировать отдельно после того как 
      удостоверюсь, что а-б <br>
      работает.<br>
      ___________________________________________________________________________________________
      <br>
      Четверг, 14 мая 2009 г.<br>
      <br>
      Продолжил тестирование. Расхождения в оценке нет. В вариантах очень редко 
      (за партию <br>
      несколько раз) есть расхождения, но оценка у этих вариантов одинаковая. Я 
      думаю, что так и <br>
      должно быть. Из двух одинаковых по оценке вариантов запишется тот, что 
      первый встретился, а <br>
      из-за наличия сортировки по истории их порядок не обязан совпадать в а-б и 
      в полном <br>
      переборе.<br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 16 мая 2009 г.<br>
      <br>
      Вывод варианта протестировал. Ошибок не обнаружил. <br>
      <br>
      Погонял партии с другими движками на фиксированной глубине и ясно увидел, 
      какое <br>
      колоссальное значение имеют продления на шахах и взятиях. Бывает, что 
      поиск на глубине 3 <br>
      полуходов, но с продлениями на шахах выигрывает у поиска на 7 полу ходах, 
      но без продлений.<br>
      <br>
      Очевидно, что без продлений на шахах выиграть невозможно. Вопросом 
      остается - где <br>
      продлевать шахи в форсированном переборе или в полном переборе? Тут надо 
      подумать.<br>
      Т.е. вопрос конечно не совсем в этом, а в том хватит ли продлений на шахах 
      в основном <br>
      переборе или все-таки добавлять его еще и в форсированных вариантах. <br>
      ___________________________________________________________________________________________
      <br>
      Воскресенье, 31 мая 2009 г.<br>
      <br>
      Четвертый этап.<br>
      Хеш-таблицу подключил. Насколько я смог протестировать искажений в поиск 
      оценки она не <br>
      вносит. Сравнивал с <br>
      альфа-бета на глубине меньшей на единицу. Если с хеш-таблицей глубина 8 то 
      а-б играет на <br>
      глубине 7. Это позволяет проверить вариант. Таким образом, к хеш-таблице у 
      меня пока <br>
      вопросов нет.<br>
      <br>
      Внутренние итерации вроде работают. Но мне кажется тут очень много засад 
      при работе с <br>
      нулевым ходом и продлениями.<br>
      Вообще следует сказать, что сегодня эта эвристика совершенно неактуальна. 
      Возможно, раньше, <br>
      когда оперативной памяти было мало использование ее имело смысл, но 
      сегодня это только <br>
      ненужное усложнение программы.<br>
      Если еще вспомнить, что вызываем ее мы только в основном варианте, то при 
      большой <br>
      хеш-таблице, по-моему, она почти не вызывается. И даже когда вызывается, у 
      меня очень <br>
      часто ход на предыдущей глубине не совпадает со следующим, так что и с 
      этой точки зрения <br>
      это пустая трата ресурсов.<br>
      Самое главное это то, что у меня с этой эвристикой считает дольше, чем без 
      нее. Тут надо <br>
      будет подумать может я что-то не так сделал, а пока ее отключу.<br>
      <br>
      Пятый этап.<br>
      Включаем нулевой ход.<br>
      Первые тесты показали, что нулевой работает нормально. Главное что 
      требуется это решить <br>
      проблему цугцванга.<br>
      <br>
      Какие вопросы еще остались:<br>
      1) форсирование шахов<br>
      2) форсирование взятий<br>
      3) ничья повторением позиций<br>
      4) дельта прунинг<br>
      5) футилити прунинг<br>
      6) ЛМР<br>
      <br>
      Лучше всего играет полный перебор. Но у него слишком маленькая глубина.<br>
      Таким образом, самой главной является альфа-бета оптимизация, которая в 
      идеале дает <br>
      удвоение глубины поиска.<br>
      Все сортировки только ускоряют а-б.<br>
      Надо понимать, что а-б в идеале играет так же как полный перебор, а если 
      есть ошибки то <br>
      хуже.<br>
      Ускорение в а-б достигается за счет того, что достоверен у нас только 
      главный вариант, все <br>
      остальные можно усилить.<br>
      <br>
      Рассмотрим эвристики с точки зрения игры на фиксированной глубине.<br>
      <br>
      Итак, если у нас фиксированная глубина, то а-б ничего не добавляет к 
      полному перебору, <br>
      кроме скорости. То же можно сказать обо всех сортировках. Их цель только 
      ускорить поиск, <br>
      качество игры они не улучшают.<br>
      <br>
      Нулевой ход, лмр, футилити прунинг только ухудшают игру, но мы с этим 
      миримся из-за <br>
      существенного ускорения поиска.<br>
      <br>
      Усиливают игру форсированные варианты. Но тут надо соблюдать осторожность, 
      так как они <br>
      замедляют перебор.<br>
      Причем продления имеют принципиальные значения для силы игры.<br>
      ___________________________________________________________________________________________
      <br>
      Суббота, 6 июня 2009 г.<br>
      До меня, наконец, дошло, что продления на шахах можно не ограничивать. 
      Потому что это <br>
      процесс самозатухающий. <br>
      Для меня довольно сложным был вопрос, на какой глубине остановиться, но 
      теперь вопроса <br>
      больше нет. Конечно, это справедливо для случая, когда мы продлеваем на 
      один полуход.<br>
      <p>&nbsp;<p>&nbsp;<p>&nbsp;<p>&nbsp;<p>&nbsp;<p>&nbsp;<p><br>
      <br>
&nbsp;</tr>
</table>
<p>&nbsp;</p>
</font>
</body>