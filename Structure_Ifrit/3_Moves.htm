<!DOCTYPE html>
<html>

<head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<!-- Copyright (c) 2006-2019, Brenkman Andrey and/or its affiliates. All rights reserved. -->
<title>Реализатор ходов</title>
</head>

<body>

<table border="0" cellspacing="1" width="100%" id="AutoNumber1"  bgcolor="#CCCCFF">
  <tr>
    <td width="100%">
    <table border="0" cellspacing="1" width="100%" id="AutoNumber2">
      <tr>
        <td width="*">
        <h2 align="center"><span lang="ru">Реализатор ходов</span></h2>
        </td>
        <td width="25%">
        <p align="center"><a href="0_Structure_Ifrit.htm">на главную страницу</a></td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td width="100%">
 Реализатор ходов.<br>
 <br>
 Реализатор состоит из двух частей - прямой ход и возврат хода. Мы делаем ход, 
 а потом возвращаем ход.<br>
 <br>
 Номер хода по списку, список возможных ходов, позиция, список реальных ходов:<br>
 Onward_moves_816(int i,T_list_possible_moves * 
 list_possible_moves,T_board_list_816 * board_list_816)<br>
 Принимаем список возможных ходов; номер хода в этом списке и позицию, в которой 
 нужно сделать ход. <br>
 <br>
 В реализаторе основой является обработка информации из описателя типа хода:<br>
 является ли ход ходом - 0, взятием - 1, взятием на проходе - 2, рокировкой - 3, 
 превращением - 4, превращением с взятием - 5.<br>
 <br>
 Прямой ход.<br>
 <br>
 При любом ходе мы запоминаем флаг взятия на проходе, а потом запрещаем взятие. И 
 это понятно, ведь берем либо сейчас, либо никогда.<br>
 В списке возможных ходов пришлось даже сделать поле:<br>
 list_possible_moves-&gt;return_taking_passage<br>
 <br>
 -----------------------------------------------------<br>
 Обычный ход - 0.<br>
 Стираем фигуру на старом месте и рисуем на новом.<br>
 <br>
 Особые случаи:<br>
 - если пешку двинули на два поля, то отмечаем битое поле и разрешение на взятие 
 на проходе следующим ходом;<br>
 - если двинули короля, то запоминаем флаг и запрещаем его рокировку;<br>
 - если двинули ладью, то запоминаем флаг и запрещаем рокировку с участием этой 
 ладьи.<br>
 <br>
 -----------------------------------------------------<br>
 Взятие - 1.<br>
 С нового места фигуру заносим в &quot;list_possible_moves-&gt;name_taking_figure[i]&quot;.<br>
 Если съели ладью, то помечаем флаг рокировки в доске и списке. <br>
 Стираем фигуру на старом месте рисуем на новом.<br>
 <br>
 -----------------------------------------------------<br>
 Взятие на проходе - 2.<br>
 Стираем фигуру на старом месте и рисуем на новом.<br>
 Стираем проскочившую пешку.<br>
 <br>
 -----------------------------------------------------<br>
 Рокировка - 3.<br>
 Рисуем короля и ладью на новом месте и стираем на старом.<br>
 Помечаем флаг рокировки в доске и списке.<br>
 <br>
 -----------------------------------------------------<br>
 Превращение пешки - 4.<br>
 Стираем пешку на старом месте на новом рисуем ферзя.<br>
 <br>
 -----------------------------------------------------<br>
 Превращение пешки с взятием - 5.<br>
 С нового места фигуру заносим в &quot;list_possible_moves-&gt;name_taking_figure[i]&quot;.<br>
 Если съели ладью, то помечаем флаг рокировки в доске и списке.<br>
 Стираем пешку на старом месте, на новом рисуем ферзя.<br>
 <br>
 -----------------------------------------------------<br>
 <br>
 Вывод тестовой информации по блоку ходов в этом модуле не производиться. 
 Тестируем их в модуле перебора.<br>
 ___________________________________________________________________________________<br>
 Модульная реализация генератора и реализатора ходов.<br>
 <br>
 Генератор создает всевозможные ходы из данной позиции, причем, в списке 
 указывается, что за фигура ходит, откуда и куда, и тип хода. Третье поле нужно 
 хотя бы для передачи того, во что превращается пешка. Так что, запись типа хода 
 оправдана. И еще она нужна для сортировки взятий до ходов. <br>
 Итак, принципиально нужно генерить все ходы и описывать тип хода.<br>
 <br>
 В модуле Rules_816 находится
 функция:<br>
 // 0 - нет фигуры, 1 - пешка, 2 - ладья, 3 - конь, 4 - слон, 5 - ферзь, 6 - король.<br>
 // аргументы :&quot;name-имя фигуры,n-координата 
 фигуры,board_816-доска,list_possible_moves&quot; - список возможных ходов.<br>
 &quot;void Rules_816(int name,int n,T_board_list_816 
 board_list_816,T_list_possible_moves * list_possible_moves)&quot; -
 в ней мы рассчитываем возможные ходы для одной фигуры. 
 <p>В результате выдается 
 список возможных ходов.<br>
 <br>
 В модуле Possible_moves находится
 функция:<br>
 &quot;void Generator_possible_moves(T_list_possible_moves * 
 list_possible_moves,T_board_list_816 board_list_816)&quot; -
 это генератор всевозможных ходов из данной позиции. </p>
 <p>В результате его работы 
 выдается список всевозможных ходов из
 данной позиции.<br>
 Благодаря этому мы разделяем генератор ходов и реализатор ходов. Причем, при 
 альфа-бета отсечении получается, что мы генерируем огромное количество ходов, 
 которые никогда не используем. Обосновать данный прием можно, только если мы 
 используем сортировку с нахождением всех взятий. Так как взятия с большой 
 вероятностью вызывают отсечение, то данный прием должен компенсировать 
 недостатки полной генерации списка. Если же это будет не так - придется 
 переделывать. <br>
 <br>
 В модуле Move_816 находятся
 функции:<br>
 номер хода по списку, список возможных ходов, позиция, список реальных ходов -<br>
 &quot;void Onward_moves_816(int i,T_list_possible_moves * 
 list_possible_moves,T_board_list_816 * board_list_816)&quot;<br>
 и<br>
 &quot;void Backs_moves_816(int i,T_list_possible_moves 
 list_possible_moves,T_board_list_816 * board_list_816)&quot;.<br>
 <br>
 Реализатор состоит из двух частей - это прямой ход и возврат хода. Мы делаем ход, 
 а потом возвращаем ход.<br>
 В результате работы мы получаем новую позицию либо возвращаемся на шаг назад.<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
</td>
  </tr>
</table>

</body>

</html>