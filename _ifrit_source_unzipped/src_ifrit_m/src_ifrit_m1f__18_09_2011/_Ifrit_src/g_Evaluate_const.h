
/// АВТОР Бренкман Андрей (Brenkman Andrey)
/// ПОСЛЕДНЕЕ ИЗМЕНЕНИЕ 11.12.2010 17.08.2011
/// УРОВЕНЬ МОЕГО ДОВЕРИЯ 70%


namespace G_EVALUATE_CONSTANTS
{

/// System by Max Euwe and Hans Kramer
/// (http://chessprogramming.wikispaces.com/Material)

/// QUEEN =  1000
/// ROOK =   550
/// BISHOP = 350
/// KNIGHT = 350


/// Many strong chess programs including Fruit use a different generic scale
/// (http://chessprogramming.wikispaces.com/Material)

/// QUEEN =  1200
/// ROOK =   600
/// BISHOP = 400
/// KNIGHT = 400

/// Larry Kaufman proposed some modifications based on statistics
/// (http://chessprogramming.wikispaces.com/Material)

/// QUEEN =  975
/// ROOK =   500
/// BISHOP = 325
/// KNIGHT = 325

/// в данный момент
/// pst настроена по работе Tomasz Michniewski
/// с некоторыми моими корректировками
/// (http://chessprogramming.wikispaces.com/Simplified+evaluation+function)


	/// значения для обсчета материала(по Larry Kaufman)
	const unsigned __int16 KING = 0;     /// король  (было 90000)
	const unsigned __int16 QUEEN = 975; /// ферзь
	const unsigned __int16 ROOK = 500;   /// ладья 
	const unsigned __int16 BISHOP = 325; /// слон 
	const unsigned __int16 KNIGHT = 325; /// конь 
	const unsigned __int16 PAWN = 100;   /// пешка 

	/// массив весов фигур: 0 - 0, 1 - пешка, 2 - конь, 
	/// 3- слон, 4 - ладья, 5 - ферзь, 6 - король;
	const unsigned __int16 KOD[7] = 
	{
		0,PAWN,KNIGHT,BISHOP,ROOK,QUEEN,KING, 
	};

///                PST

	/// использую для тестирования считывания таблиц pst
	const __int8 test[] =
	{
		0, 1, 2, 3, 4, 5, 6, 7,
		8, 9,10,11,12,13,14,15,
		16,17,18,19,20,21,22,23,
		24,25,26,27,28,29,30,31,

		32,33,34,35,34,37,38,39,
		40,41,42,43,44,45,46,47,
		48,49,50,51,52,53,54,55,
		56,57,58,59,60,61,62,63,
	};

	/*

	A8(56) B8(57) C8(58) D8(59) E8(60) F8(61) G8(62) H8(63)
	A7(48) B7(49) C7(50) D7(51) E7(52) F7(53) G7(54) H7(55)
	A6(40) B6(41) C6(42) D6(43) E6(44) F6(45) G6(46) H6(47)
	A5(32) B5(33) C5(34) D5(35) E5(36) F5(37) G5(38) H5(39)

	A4(24) B4(25) C4(26) D4(27) E4(28) F4(29) G4(30) H4(31)
	A3(16) B3(17) C3(18) D3(19) E3(20) F3(21) G3(22) H3(23)
	A2(8)  B2(9)  C2(10) D2(11) E2(12) F2(13) G2(14) H2(15)
	A1(0)  B1(1)  C1(2)  D1(3)  E1(4)  F1(5)  G1(6)  H1(7)

	при записи 
	eval = eval + test[from];

	для фигуры на Н1 т.е. from = 7 test[from] = 7

	КАРТА МАССИВА ПСТ ЗЕРКАЛЬНО ОТОБРАЖЕНА ОТНОСИТЕЛЬНО ГОРИЗОНТА !

	непосредственно это выглядит так:

	test[A8] = 56 test[B1] = 57 ... test[G1] = 62 test[H1] = 63 	
	......
	......
	test[A1] = 0  test[B1] = 1  ... test[G1] = 6  test[H1] = 7 

	т.о. когда мы смотрим на массив пст то мы видим не доску а доску которая
	зеркально отображена относительно горизонтальной линии
	конечно это неудобно и это надо учитывать когда задаем таблицы пст.

	*/




/// КОРОЛЬ

	/// король должен стремиться спрятаться
	const __int8 pozicion_king_white[] =
	{
		 20, 30, 10,  0,  0, 10, 30, 20,
		 20, 20,  0,  0,  0,  0, 20, 20,
		-10,-20,-20,-20,-20,-20,-20,-10,
		-20,-30,-30,-40,-40,-30,-30,-20,

		-30,-40,-40,-50,-50,-40,-40,-30,
		-30,-40,-40,-50,-50,-40,-40,-30,
		-30,-40,-40,-50,-50,-40,-40,-30,
		-30,-40,-40,-50,-50,-40,-40,-30
	};

	const __int8 pozicion_king_black[] =
	{
		-30,-40,-40,-50,-50,-40,-40,-30,
		-30,-40,-40,-50,-50,-40,-40,-30,
		-30,-40,-40,-50,-50,-40,-40,-30,
		-30,-40,-40,-50,-50,-40,-40,-30,

		-20,-30,-30,-40,-40,-30,-30,-20,
		-10,-20,-20,-20,-20,-20,-20,-10,
		 20, 20,  0,  0,  0,  0, 20, 20,
		 20, 30, 10,  0,  0, 10, 30, 20
	};

	/// в эндшпиле король должен стремиться к центру
	const __int8 pozicion_king_white_end[] =
	{
		-50,-30,-30,-30,-30,-30,-30,-50,
		-30,-30,  0,  0,  0,  0,-30,-30,
		-30,-10, 20, 30, 30, 20,-10,-30,
		-30,-10, 30, 40, 40, 30,-10,-30,

		-30,-10, 30, 40, 40, 30,-10,-30,
		-30,-10, 20, 30, 30, 20,-10,-30,
		-30,-20,-10,  0,  0,-10,-20,-30,
		-50,-40,-30,-20,-20,-30,-40,-50,
	};

	const __int8 pozicion_king_black_end[] =
	{
		-50,-40,-30,-20,-20,-30,-40,-50,
		-30,-20,-10,  0,  0,-10,-20,-30,
		-30,-10, 20, 30, 30, 20,-10,-30,
		-30,-10, 30, 40, 40, 30,-10,-30,

		-30,-10, 30, 40, 40, 30,-10,-30,
		-30,-10, 20, 30, 30, 20,-10,-30,
		-30,-30,  0,  0,  0,  0,-30,-30,
		-50,-30,-30,-30,-30,-30,-30,-50
	};

/// ФЕРЗЬ

	const __int8 pozicion_queen_white[] =
	{
		-20,-10,-10, -5, -5,-10,-10,-20,
		-10,  0,  5,  0,  0,  0,  0,-10,
		-10,  5,  5,  5,  5,  5,  0,-10,
		  0,  0,  5,  5,  5,  5,  0, -5,

		 -5,  0,  5,  5,  5,  5,  0, -5,
		-10,  0,  5,  5,  5,  5,  0,-10,
		-10,  0,  0,  0,  0,  0,  0,-10,
		-20,-10,-10, -5, -5,-10,-10,-20
	};

	const __int8 pozicion_queen_black[] =
	{
		-20,-10,-10, -5, -5,-10,-10,-20,
		-10,  0,  0,  0,  0,  0,  0,-10,
		-10,  0,  5,  5,  5,  5,  0,-10,
		 -5,  0,  5,  5,  5,  5,  0, -5,

		  0,  0,  5,  5,  5,  5,  0, -5,
		-10,  5,  5,  5,  5,  5,  0,-10,
		-10,  0,  5,  0,  0,  0,  0,-10,
		-20,-10,-10, -5, -5,-10,-10,-20
	};

/// ЛАДЬЯ

	const __int8 pozicion_rook_white[] =
	{
		 -5,  -5,  0,  5,  5,  0,  -5,  -5,
		 -5,  -5,  0,  0,  0,  0,  -5, -5,
		 -5,  0,  0,  0,  0,  0,  0, -5,
		 -5,  0,  0,  0,  0,  0,  0, -5,

		 -5,  0,  0,  0,  0,  0,  0, -5,
		 -5,  0,  0,  0,  0,  0,  0, -5,
		  5, 10, 10, 10, 10, 10, 10,  5,
		  0,  0,  0,  0,  0,  0,  0,  0
	};

	const __int8 pozicion_rook_black[] =
	{
		 0,  0,  0,  0,  0,  0,  0,  0,
		 5, 10, 10, 10, 10, 10, 10,  5,
		-5,  0,  0,  0,  0,  0,  0, -5,
		-5,  0,  0,  0,  0,  0,  0, -5,

		-5,  0,  0,  0,  0,  0,  0, -5,
		-5,  0,  0,  0,  0,  0,  0, -5,
		-5,  0,  0,  0,  0,  0,  0, -5,
		-5,  -5,  0,  5,  5,  0,  -5,  -5
	};


/// СЛОН

	/// ценность центра
	/// + слоны должны стремиться контролировать главные диагонали
	/// завышаем несколько полей типа поля фианкетирования слона
	const __int8 pozicion_bishop_white[] =
	{
		-20,-10,-10,-10,-10,-10,-10,-20,
		-10,  5,  0,  0,  0,  0,  5,-10,
		-10, 10, 10, 10, 10, 10, 10,-10,
		-10,  0, 10, 10, 10, 10,  0,-10,

		-10,  5,  5, 10, 10,  5,  5,-10,
		-10,  0,  5, 10, 10,  5,  0,-10,
		-10,  0,  0,  0,  0,  0,  0,-10,
		-20,-10,-10,-10,-10,-10,-10,-20
	};

	const __int8 pozicion_bishop_black[] =
	{
		-20,-10,-10,-10,-10,-10,-10,-20,
		-10,  0,  0,  0,  0,  0,  0,-10,
		-10,  0,  5, 10, 10,  5,  0,-10,
		-10,  5,  5, 10, 10,  5,  5,-10,

		-10,  0, 10, 10, 10, 10,  0,-10,
		-10, 10, 10, 10, 10, 10, 10,-10,
		-10,  5,  0,  0,  0,  0,  5,-10,
		-20,-10,-10,-10,-10,-10,-10,-20
	};

/// КОНЬ

	/// чем ближе к центру тем более ценно поле
	/// за линией разделения те же поля весят на единицу больше
	const __int8 pozicion_knigh_white[] =
	{
		-50,-40,-30,-30,-30,-30,-40,-50,
		-40,-20,  0,  5,  5,  0,-20,-40,
		-30,  5, 10, 15, 15, 10,  5,-30,
		-30,  0, 15, 20, 20, 15,  0,-30,

		-30,  5, 15, 20, 20, 15,  5,-30,
		-30,  0, 10, 15, 15, 10,  0,-30,
		-40,-20,  0,  0,  0,  0,-20,-40,
		-50,-40,-30,-30,-30,-30,-40,-50,
	};

	const __int8 pozicion_knigh_black[] =
	{
		-50,-40,-30,-30,-30,-30,-40,-50,
		-40,-20,  0,  0,  0,  0,-20,-40,
		-30,  0, 10, 15, 15, 10,  0,-30,
		-30,  5, 15, 20, 20, 15,  5,-30,

		-30,  0, 15, 20, 20, 15,  0,-30,
		-30,  5, 10, 15, 15, 10,  5,-30,
		-40,-20,  0,  5,  5,  0,-20,-40,
		-50,-40,-30,-30,-30,-30,-40,-50,
	};


/// ПЕШКА
/// сейчас вдруг подумал что пешки это душа атаки и основа обороны :)

	/// король в центре так что ходить можно только центральными пешками
	const __int8 pozicion_pawn_king_in_center_white[] =
	{
		 0,  0,  0,  0,  0,  0,  0,  0,
		 5, 10, 10,-20,-20, 10, 10,  5,
		 -5, -5,-10,  0,  0,-10, -5,  -5,
		 -5, -5,-10,  20,  20,-10, -5,  -5,

		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0
	}; 

	const __int8 pozicion_pawn_king_in_center_black[] =
	{
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,

		 -5, -5,-10,  20,  20,-10, -5,  -5,
		 -5, -5,-10,  0,  0,-10, -5,  -5,
		 5, 10, 10,-20,-20, 10, 10,  5,
		 0,  0,  0,  0,  0,  0,  0,  0
	};


	/// когда короткая рокировка приходят в движение пешки с другого фланга
	const __int8 pozicion_pawn_king_in_oo_white[] =
	{
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  10, 10, 5,
		 0,  0,  0,  0,  0,  -10,  -5,  -5,
		 0,  0,  0,  0,  0,  0,  0,  0,

		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0
	};

	const __int8 pozicion_pawn_king_in_oo_black[] =
	{
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,

		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  -10,  -5,  -5,
		 0,  0,  0,  0,  0,  10, 10, 5,
		 0,  0,  0,  0,  0,  0,  0,  0
	};


	/// когда длинная рокировка приходят в движение пешки с другого фланга
	const __int8 pozicion_pawn_king_in_ooo_white[] =
	{
		 0,  0,  0,  0,  0,  0,  0,  0,
		 5, 10, 10,0,0, 0, 0,  0,
		 5, -5,-10,  0,  0,0, 0,  0,
		 0,  0,  0, 0, 0,  0,  0,  0,


		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0
	};

	const __int8 pozicion_pawn_king_in_ooo_black[] =
	{
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,

		 0,  0,  0,  0,  0,  0,  0,  0,
		 5, -5,-10,  0,  0,0, 0,  0,
		 5, 10, 10,0,0, 0, 0,  0,
		 0,  0,  0, 0, 0,  0,  0,  0
	};


	///бонус пешкам за продвижение. используем для эндшпиля
	const __int8 pozicion_pawn_white_end[] =
	{
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 5,  5,  5,  5,  5,  5,  5,  5,

		 10,  10,  10,  10,  10,  10,  10,  10,
		 15,  15,  15,  15,  15,  15,  15,  15,
		 20,  20,  20,  20,  20,  20,  20,  20,
		 30,  30,  30,  30,  30,  30,  30,  30
	};

	const __int8 pozicion_pawn_black_end[] =
	{
		 30,  30,  30,  30,  30,  30,  30,  30,
		 20,  20,  20,  20,  20,  20,  20,  20,
		 15,  15,  15,  15,  15,  15,  15,  15,
		 10,  10,  10,  10,  10,  10,  10,  10,

		 5,  5,  5,  5,  5,  5,  5,  5,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0
	};

	///бонус проходным пешкам за продвижение
	const __int16 pozicion_perspective_pawn_white_end[] =
	{
		 0,    0,   0,   0,   0,   0,   0,   0,
		 20,  20,  20,  20,  20,  20,  20,  20,                  
		 30,  30,  30,  30,  30,  30,  30,  30,
		 40,  40,  40,  40,  40,  40,  40,  40,

		 50,  50,  50,  50,  50,  50,  50,  50,
		 100,  100,  100,  100,  100,  100,  100,  100,
		 200,  200,  200,  200,  200,  200,  200,  200,  
		 500,  500,  500,  500,  500,  500,  500,  500
	};

	const __int16 pozicion_perspective_pawn_black_end[] =
	{
		 500,  500,  500,  500,  500,  500,  500,  500,   
		 200,  200,  200,  200,  200,  200,  200,  200,     
		 100,  100,  100,  100,  100,  100,  100,  100,
		 50,  50,  50,  50,  50,  50,  50,  50,

		 40,  40,  40,  40,  40,  40,  40,  40,
		 30,  30,  30,  30,  30,  30,  30,  30,
		 20,  20,  20,  20,  20,  20,  20,  20,          
		 0,    0,   0,   0,   0,   0,   0,   0          
	};

	/// безопасность короля
	const unsigned __int8 PENALTY_CASTLING_O_O   = 50;/// бонус за короткую рокировку
	const unsigned __int8 PENALTY_CASTLING_O_O_O = 50;/// бонус за длинную рокировку
	const unsigned __int8 PENALTY_SHIELD = 20;/// бонус за прикрытие короля спереди пешкой
	const unsigned __int8 PENALTY_PAWNN = 10;/// штраф за сдвоенные пешки
	const unsigned __int8 PERSPECTIVE_PAWNN = 10;/// проходные пешки бонус за каждую вертикаль (макс 3)

	const unsigned __int8 CONTROL_SQUARE_QUEEN = 1;/// коэффициент захвата пространства ферзем
	const unsigned __int8 CONTROL_SQUARE_ROOK = 1;/// коэффициент захвата пространства ладьей
	const unsigned __int8 CONTROL_SQUARE_BISHOP = 1;/// коэффициент захвата пространства слоном
	const unsigned __int8 CONTROL_SQUARE_KNIGHT = 1;/// коэффициент захвата пространства конем

	const unsigned __int8 CONTROL_SQUARE = 1;/// коэффициент захвата пространства безличный
	const unsigned __int8 ATAK_KING = 10;/// коэффициент атаки на короля(пока не использую)

	/// это момент когда может вылезти король и начинаем гнать пешки вперед
	const unsigned __int16 RUBIKON = QUEEN + ROOK
		+ KING;///рубеж перехода в эндшпиль(две ладьи и слон и пешка)1600
						/// как только материала у врага меньше то эндшпиль   
	//const unsigned __int16 rubikon = 0;// test
}

using namespace G_EVALUATE_CONSTANTS;
