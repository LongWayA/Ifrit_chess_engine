
/// АВТОР Бренкман Андрей (Brenkman Andrey)
/// ПОСЛЕДНЕЕ ИЗМЕНЕНИЕ 11.12.2010 17.08.2011 19.09.2011
/// УРОВЕНЬ МОЕГО ДОВЕРИЯ 70%


namespace EVALUATE_CONSTANTS
{

/// System by Max Euwe and Hans Kramer
/// (http://chessprogramming.wikispaces.com/Material)

/// QUEEN =  1000
/// ROOK =   550
/// BISHOP = 350
/// KNIGHT = 350


/// Many strong chess programs including Fruit use a different generic scale
/// (http://chessprogramming.wikispaces.com/Material)

/// QUEEN =  1200
/// ROOK =   600
/// BISHOP = 400
/// KNIGHT = 400

/// Larry Kaufman proposed some modifications based on statistics
/// (http://chessprogramming.wikispaces.com/Material)

/// QUEEN =  975
/// ROOK =   500
/// BISHOP = 325
/// KNIGHT = 325

	/// значения для обсчета материала(по Larry Kaufman) + пешка
	const unsigned __int16 KING = 0;     /// король  (было 90000)
	const unsigned __int16 QUEEN = 1075; /// ферзь
	const unsigned __int16 ROOK = 600;   /// ладья 
	const unsigned __int16 BISHOP = 425; /// слон 
	const unsigned __int16 KNIGHT = 425; /// конь 
	const unsigned __int16 PAWN = 100;   /// пешка 

	/// массив весов фигур: 0 - 0, 1 - пешка, 2 - конь, 
	/// 3- слон, 4 - ладья, 5 - ферзь, 6 - король;
	const unsigned __int16 KOD[7] = 
	{
		0,PAWN,KNIGHT,BISHOP,ROOK,QUEEN,KING, 
	};



///                PST


	/*

	A8(56) B8(57) C8(58) D8(59) E8(60) F8(61) G8(62) H8(63)
	A7(48) B7(49) C7(50) D7(51) E7(52) F7(53) G7(54) H7(55)
	A6(40) B6(41) C6(42) D6(43) E6(44) F6(45) G6(46) H6(47)
	A5(32) B5(33) C5(34) D5(35) E5(36) F5(37) G5(38) H5(39)

	A4(24) B4(25) C4(26) D4(27) E4(28) F4(29) G4(30) H4(31)
	A3(16) B3(17) C3(18) D3(19) E3(20) F3(21) G3(22) H3(23)
	A2(8)  B2(9)  C2(10) D2(11) E2(12) F2(13) G2(14) H2(15)
	A1(0)  B1(1)  C1(2)  D1(3)  E1(4)  F1(5)  G1(6)  H1(7)

	при записи 
	eval = eval + test[from];

	для фигуры на Н1 т.е. from = 7 test[from] = 7

	КАРТА МАССИВА ПСТ ЗЕРКАЛЬНО ОТОБРАЖЕНА ОТНОСИТЕЛЬНО ГОРИЗОНТА !

	непосредственно это выглядит так:

	test[A8] = 56 test[B1] = 57 ... test[G1] = 62 test[H1] = 63 	
	......
	......
	test[A1] = 0  test[B1] = 1  ... test[G1] = 6  test[H1] = 7 

	т.о. когда мы смотрим на массив пст то мы видим не доску а доску которая
	зеркально отображена относительно горизонтальной линии
	конечно это неудобно и это надо учитывать когда задаем таблицы пст.

	*/

	/// использую для тестирования считывания таблиц pst
	const __int8 test[] =
	{
		0, 1, 2, 3, 4, 5, 6, 7,
		8, 9,10,11,12,13,14,15,
		16,17,18,19,20,21,22,23,
		24,25,26,27,28,29,30,31,

		32,33,34,35,34,37,38,39,
		40,41,42,43,44,45,46,47,
		48,49,50,51,52,53,54,55,
		56,57,58,59,60,61,62,63,
	};


/// КОРОЛЬ

	/// король должен стремиться спрятаться
	/// в начале и середине партии
	/// король в центре это очень плохо вот только насколько?
	/// 27+3=30 ферзь плюс максимальный градиент
	/// градиент беру 5
	const __int8 pozicion_king_white[] =
	{
		25,30,20,20,20,20,30,25,
		10,10,10,10,10,10,10,10,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,

		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0
	};

	const __int8 pozicion_king_black[] =
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,

		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		10,10,10,10,10,10,10,10,
		25,30,20,20,20,20,30,25
	};

	/// в эндшпиле король должен стремиться к центру
	/// по направлению к центру градиент 3
	const __int8 pozicion_king_white_end[] =
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 3, 3, 3, 3, 3, 3, 0,
		0, 3, 6, 6, 6, 6, 3, 0,
		0, 3, 6, 9, 9, 6, 3, 0,

		0, 3, 6, 9, 9, 6, 3, 0,
		0, 3, 6, 6, 6, 6, 3, 0,
		0, 3, 3, 3, 3, 3, 3, 0,
		0, 0, 0, 0, 0, 0, 0, 0
	};

	const __int8 pozicion_king_black_end[] =
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 3, 3, 3, 3, 3, 3, 0,
		0, 3, 6, 6, 6, 6, 3, 0,
		0, 3, 6, 9, 9, 6, 3, 0,

		0, 3, 6, 9, 9, 6, 3, 0,
		0, 3, 6, 6, 6, 6, 3, 0,
		0, 3, 3, 3, 3, 3, 3, 0,
		0, 0, 0, 0, 0, 0, 0, 0
	};

/// ФЕРЗЬ

	/// пишем мобильность ферзя на полях 
	/// это ладья плюс слон так что мобильность как у слона с бонусом в 14
	/// по направлению к центру градиент 2
	//const __int8 pozicion_queen_white[] =
	//{
	//	21,21,21,21,21,21,21,21,
	//	21,23,23,23,23,23,23,21,
	//	21,23,25,25,25,25,23,21,
	//	21,23,25,27,27,25,23,21,

	//	21,23,25,27,27,25,23,21,
	//	21,23,25,25,25,25,23,21,
	//	21,23,23,23,23,23,23,21,
	//	21,21,21,21,21,21,21,21
	//};

	//const __int8 pozicion_queen_black[] =
	//{
	//	21,21,21,21,21,21,21,21,
	//	21,23,23,23,23,23,23,21,
	//	21,23,25,25,25,25,23,21,
	//	21,23,25,27,27,25,23,21,

	//	21,23,25,27,27,25,23,21,
	//	21,23,25,25,25,25,23,21,
	//	21,23,23,23,23,23,23,21,
	//	21,21,21,21,21,21,21,21
	//};

/// ЛАДЬЯ

	/// пишем мобильность ладьи на полях 
	//const __int8 pozicion_rook_white[] =
	//{
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,

	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14
	//};

	//const __int8 pozicion_rook_black[] =
	//{
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,

	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14,
	//	14,14,14,14,14,14,14,14
	//};


/// СЛОН

	/// пишем мобильность слона на полях 
	/// по направлению к центру градиент 2 
	//const __int8 pozicion_bishop_white[] =
	//{
	//	7, 7, 7, 7, 7, 7, 7, 7,
	//	7, 9, 9, 9, 9, 9, 9, 7,
	//	7, 9,11,11,11,11, 9, 7,
	//	7, 9,11,13,13,11, 9, 7,

	//	7, 9,11,13,13,11, 9, 7,
	//	7, 9,11,11,11,11, 9, 7,
	//	7, 9, 9, 9, 9, 9, 9, 7,
	//	7, 7, 7, 7, 7, 7, 7, 7
	//};

	//const __int8 pozicion_bishop_black[] =
	//{
	//	7, 7, 7, 7, 7, 7, 7, 7,
	//	7, 9, 9, 9, 9, 9, 9, 7,
	//	7, 9,11,11,11,11, 9, 7,
	//	7, 9,11,13,13,11, 9, 7,

	//	7, 9,11,13,13,11, 9, 7,
	//	7, 9,11,11,11,11, 9, 7,
	//	7, 9, 9, 9, 9, 9, 9, 7,
	//	7, 7, 7, 7, 7, 7, 7, 7
	//};


/// КОНЬ

		//2, 3, 4, 4, 4, 4, 3, 2,
		//3, 4, 6, 6, 6, 6, 4, 3,
		//4, 6, 8, 8, 8, 8, 6, 4,
		//4, 6, 8, 8, 8, 8, 6, 4,

		//4, 6, 8, 8, 8, 8, 6, 4,
		//4, 6, 8, 8, 8, 8, 6, 4,
		//3, 4, 6, 6, 6, 6, 4, 3,
		//2, 3, 4, 4, 4, 4, 3, 2

	/// пишем мобильность коня в данном поле
	/// по направлению к центру градиент 2 только в углах он падает до 1 по перпендикулярам
	const __int8 pozicion_knigh_white[] =
	{
		2, 3, 4, 4, 4, 4, 3, 2,
		3, 4, 6, 6, 6, 6, 4, 3,
		4, 6, 8, 8, 8, 8, 6, 4,
		4, 6, 8,10,10, 8, 6, 4,

		4, 6, 8,10,10, 8, 6, 4,
		4, 6, 8, 8, 8, 8, 6, 4,
		3, 4, 6, 6, 6, 6, 4, 3,
		2, 3, 4, 4, 4, 4, 3, 2
	};

	const __int8 pozicion_knigh_black[] =
	{
		2, 3, 4, 4, 4, 4, 3, 2,
		3, 4, 6, 6, 6, 6, 4, 3,
		4, 6, 8, 8, 8, 8, 6, 4,
		4, 6, 8,10,10, 8, 6, 4,

		4, 6, 8,10,10, 8, 6, 4,
		4, 6, 8, 8, 8, 8, 6, 4,
		3, 4, 6, 6, 6, 6, 4, 3,
		2, 3, 4, 4, 4, 4, 3, 2
	};


/// ПЕШКА
/// сейчас вдруг подумал что пешки это душа атаки и основа обороны :)

	/// король в центре так что ходить можно только центральными пешками
	const __int8 pozicion_pawn_king_in_center_white[] =
	{
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 1, 1, 1, 1, 0, 0,
		  0, 0, 2, 2, 2, 2, 0, 0,

		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0
	}; 

	const __int8 pozicion_pawn_king_in_center_black[] =
	{
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,

		  0, 0, 2, 2, 2, 2, 0, 0,
		  0, 0, 1, 1, 1, 1, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0
	};


	/// когда короткая рокировка приходят в движение пешки с другого фланга
	const __int8 pozicion_pawn_king_in_oo_white[] =
	{
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  1, 1, 1, 1, 1, 1, 0, 0,
		  2, 2, 2, 2, 2, 2, 0, 0,

		  3, 3, 3, 3, 3, 3, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0
	};

	const __int8 pozicion_pawn_king_in_oo_black[] =
	{
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  3, 3, 3, 3, 3, 3, 0, 0,

		  2, 2, 2, 2, 2, 2, 0, 0,
		  1, 1, 1, 1, 1, 1, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0
	};


	/// когда длинная рокировка приходят в движение пешки с другого фланга
	const __int8 pozicion_pawn_king_in_ooo_white[] =
	{
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 1, 1, 1, 1, 1, 1,
		  0, 0, 2, 2, 2, 2, 2, 2,

		  0, 0, 3, 3, 3, 3, 3, 3,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0
	};

	const __int8 pozicion_pawn_king_in_ooo_black[] =
	{
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 3, 3, 3, 3, 3, 3,

		  0, 0, 2, 2, 2, 2, 2, 2,
		  0, 0, 1, 1, 1, 1, 1, 1,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0
	};


	///бонус пешкам за продвижение. используем для эндшпиля
	const __int8 pozicion_pawn_white_end[] =
	{
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  2, 2, 2, 2, 2, 2, 2, 2,
		  4, 4, 4, 4, 4, 4, 4, 4,

		  6, 6, 6, 6, 6, 6, 6, 6,
		  8, 8, 8, 8, 8, 8, 8, 8,
		 10,10,10,10,10,10,10,10,
		  0, 0, 0, 0, 0, 0, 0, 0
	};

	const __int8 pozicion_pawn_black_end[] =
	{
		  0, 0, 0, 0, 0, 0, 0, 0,
		 10,10,10,10,10,10,10,10,
		  8, 8, 8, 8, 8, 8, 8, 8,
		  6, 6, 6, 6, 6, 6, 6, 6,

		  4, 4, 4, 4, 4, 4, 4, 4,
		  2, 2, 2, 2, 2, 2, 2, 2,
		  0, 0, 0, 0, 0, 0, 0, 0,
		  0, 0, 0, 0, 0, 0, 0, 0
	};

	///бонус проходным пешкам за продвижение
	const __int16 pozicion_perspective_pawn_white_end[] =
	{
		   0,  0,  0,  0,  0,  0,  0,  0,
		   0,  0,  0,  0,  0,  0,  0,  0,               
		   3,  3,  3,  3,  3,  3,  3,  3,
		   6,  6,  6,  6,  6,  6,  6,  6,

		   9,  9,  9,  9,  9,  9,  9,  9,
		  50, 50, 50, 50, 50, 50, 50, 50,
		 100,100,100,100,100,100,100,100,
		   0,  0,  0,  0,  0,  0,  0,  0  
	};

	const __int16 pozicion_perspective_pawn_black_end[] =
	{
		   0,  0,  0,  0,  0,  0,  0,  0, 
		 100,100,100,100,100,100,100,100,    
		  50, 50, 50, 50, 50, 50, 50, 50,
		   9,  9,  9,  9,  9,  9,  9,  9,

		   6,  6,  6,  6,  6,  6,  6,  6,
		   3,  3,  3,  3,  3,  3,  3,  3,
		   0,  0,  0,  0,  0,  0,  0,  0,         
		   0,  0,  0,  0,  0,  0,  0,  0          
	};

	/// безопасность короля
	const unsigned __int8 PENALTY_CASTLING_O_O   = 30;/// бонус за короткую рокировку
	const unsigned __int8 PENALTY_CASTLING_O_O_O = 20;/// бонус за длинную рокировку
	//const unsigned __int8 PENALTY_SHIELD = 20;/// бонус за прикрытие короля спереди пешкой
	const unsigned __int8 PENALTY_PAWNN = 10;/// штраф за сдвоенные пешки
	const unsigned __int8 PERSPECTIVE_PAWNN = 10;/// проходные пешки бонус за каждую вертикаль (макс 3)

	const unsigned __int8 CONTROL_SQUARE_QUEEN = 1;/// коэффициент захвата пространства ферзем
	const unsigned __int8 CONTROL_SQUARE_ROOK = 1;/// коэффициент захвата пространства ладьей
	const unsigned __int8 CONTROL_SQUARE_BISHOP = 1;/// коэффициент захвата пространства слоном
	const unsigned __int8 CONTROL_SQUARE_KNIGHT = 1;/// коэффициент захвата пространства конем

	//const unsigned __int8 CONTROL_SQUARE = 1;/// коэффициент захвата пространства безличный
	const unsigned __int8 ATAK_KING = 20;/// коэффициент атаки на короля

	/// это момент когда может вылезти король и начинаем гнать пешки вперед
	const unsigned __int16 RUBIKON = 
		//0; // test
		QUEEN + ROOK + KING;///рубеж перехода в эндшпиль(две ладьи и слон и пешка)1600
						/// как только материала у врага меньше то эндшпиль   
}

using namespace EVALUATE_CONSTANTS;
