
/// ј¬“ќ– Ѕренкман јндрей (Brenkman Andrey)
/// ѕќ—Ћ≈ƒЌ≈≈ »«ћ≈Ќ≈Ќ»≈  26.05.2012
/// ”–ќ¬≈Ќ№ ћќ≈√ќ ƒќ¬≈–»я 40%

#ifndef HASH_MOVES_H
#define HASH_MOVES_H

/// реализуем кэширование лучшего хода в данной позиции
struct Hash_moves 
{

	/// хеш ключ позиции (верхн€€ половина high 32 bits)
	/// используем верхние биты 64 битного хеш - ключа(high 32 bits)
	unsigned __int32 key_lock_32_move;

	/// описание хода смотреть в структуре T_list_surplus_moves
	/// в ходе много запаковано так что меньше чем 32 брать нельз€
	__int32 move; 

	/// глубина варианта при которой получен данный ход
	unsigned __int8 move_delta_depth;

	/// возраст записанного хода. нужен что бы перезаписывать элементы от прошлых позиций
	unsigned __int8 move_age;


	/// кешируем оценку отсечка по бете(альфе) и не улучшили альфу(бету)

	/// хеш ключ позиции (верхн€€ половина high 32 bits)
	/// используем верхние биты 64 битного хеш - ключа(high 32 bits)
	unsigned __int32 key_lock_32_score;

	/// оценка
	/// видимо тут можно будет ужатьс€ до 16 но не сейчас
	__int32 score;

	/// флаг хода (1- улучшили альфу(бету); 3-просто локальный максимум(минимум); 2-отсечка по бете(альфе))
	unsigned __int8 flag_hash_score;

	/// глубина варианта при которой получена данна€ оценка
	unsigned __int8 score_delta_depth;

	/// возраст записанной оценки. нужен что бы перезаписывать элементы от прошлых позиций
	unsigned __int8 score_age;

};

#endif // !defined HASH_MOVES_H