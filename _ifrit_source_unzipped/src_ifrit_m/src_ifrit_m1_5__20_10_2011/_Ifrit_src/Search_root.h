
/// АВТОР Бренкман Андрей (Brenkman Andrey)
/// ПОСЛЕДНЕЕ ИЗМЕНЕНИЕ 2.11.2009 20.12.2009
/// УРОВЕНЬ МОЕГО ДОВЕРИЯ 50%


///!
#include "List.h"
#include "Position.h"
#include "PV_line.h"

///
#define TEST_LIST 0

/// перебор позиций
/// включает в себя данные и методы  перебора в корне т.е. на нулевой глубине

namespace Search_root
{

/// поля класса
//////////////////////////////////////////////////////////////////////////////////////
//private:


//////////////////////////////////////////////////////////////////////////////////////
//public:

	///---------------------------------------------------------------------------
	/// Поиск на нулевом уровне за белых
	__int32 white_root
	(
		struct Position & position,/// представление доски
		__int32 alpha,///
		const __int32 beta,/// 
		const unsigned __int8 depth_max/// максимальная глубина
	);

	///---------------------------------------------------------------------------
	/// Поиск на нулевом уровне за черных
	__int32 black_root
	(
		struct Position & position,/// представление доски
		const __int32 alpha,///
		__int32 beta,/// 
		const unsigned __int8 depth_max/// максимальная глубина
	);

	///---------------------------------------------------------------------------
	/// возвращаем лучший вариант
	struct PV_line & get_pv_best();

	///---------------------------------------------------------------------------
	/// возвращаем количество рассмотренных узлов
	__int64  get_nodes();

	///---------------------------------------------------------------------------
	///обнуляем количество рассмотренных узлов
	void set_nodes_in_0();

	///---------------------------------------------------------------------------
	/// возвращаем откуда делается ход
	unsigned __int8 get_from();

	///---------------------------------------------------------------------------
	/// возвращаем куда делается ход
	unsigned __int8 get_to();

//////////////////////////////////////////////////////////////////////////////////////////
//public:

#if TEST_LIST

/// печатаем список
/// глубина перебора, список
	void list_print
	(
		int Depth,// текущая глубина
		struct List & list_surplus_moves// список возможных ходов
	);

#endif

};