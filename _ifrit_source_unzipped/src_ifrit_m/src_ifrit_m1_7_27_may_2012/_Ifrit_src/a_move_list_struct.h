
/// ј¬“ќ– Ѕренкман јндрей (Brenkman Andrey)
/// ѕќ—Ћ≈ƒЌ≈≈ »«ћ≈Ќ≈Ќ»≈ 5.09.2011
/// ”–ќ¬≈Ќ№ ћќ≈√ќ ƒќ¬≈–»я 99%

#ifndef MOVE_LIST_H
#define MOVE_LIST_H

//!
#include "b_constants_header.h"

/*
Move List

*/


/// —писок избыточных ходов. “.е. здесь могут быть вз€ти€ корол€ и ходы под шах.
struct List
{
	/// в целом числе массива move мы упаковали следующую информацию (используем 27 бит)
	/// --3 бит--      --6 бит--   --6 бит--     --6 бит--  --6 бит-- 
	/// ход€ща€ фигура  куда ходим  откуда ходим  тип хода   вз€та€ фигура

	///-----------------------------------------------
	/// идем справа т.е. с младшего бита
	/// --6 бит-- 
	/// вз€та€ фигура

	/// 0 - нет фигуры
	/// 1 - пешка 
	/// 2 - конь 
	/// 3 - слон
	/// 4 - ладь€ 
	/// 5 - ферзь 
	/// 6 - король

	/// запись move = тип фигуры
	/// чтение move & 63 ( 63 это ...000111111)

	///-------------------------------------------------
	/// --6 бит--
	/// тип хода

	/// 0 - нет хода
	/// 1 Ц простой ход
	/// 2 Ц вз€тие
	/// 3 Ц длинна€ рокировка
	/// 4 Ц коротка€ рокировка
	/// 5 Ц вз€тие на проходе

	/// 12 - превращение в конь 
	/// 13 - превращение в слон
	/// 14 - превращение в ладь€ 
	/// 15 - превращение в ферзь 

	/// 22 - вз€тие с превращением в конь 
	/// 23 - вз€тие с превращением в слон
	/// 24 - вз€тие с превращением в ладь€ 
	/// 25 - вз€тие с превращением в ферзь 
 
	/// запись move = move | (тип хода << 6)
	/// чтение (move>>6) & 63

	///-------------------------------------------------
	/// --6 бит--
	/// откуда ходим (0 -63)
	/// запись move = move | (откуда ходим << 12)
	/// чтение (move>>12) & 63

	///-------------------------------------------------
	/// --6 бит--
	/// куда ходим (0 -63)
	/// запись move = move | (куда ходим << 18)
	/// чтение (move>>18) & 63

	///-------------------------------------------------
	/// --3 бит-- 
	/// ход€ща€ фигура
	/// 0 - нет фигуры
	/// 1 - пешка 
	/// 2 - конь 
	/// 3 - слон
	/// 4 - ладь€ 
	/// 5 - ферзь 
	/// 6 - король
	/// запись move = move | (куда ходим << 24)
	/// чтение (move>>24) & 7 ( 7 это ...000111)

	__int32 move[MAX_MOVE];

	/// оценка используема€ дл€ сортировки ходов
	__int32 sorting_score[MAX_MOVE];

	/// конец вз€тий в списке точнее первое не вз€тие т.е количество вз€тий 
	/// (помним что массив у нас начинаетс€ с нул€)
	unsigned __int8 end_captures;

	/// конец списка точнее перва€ пуста€ позици€ т.е. количество ходов
	unsigned __int8 end_list;

};

#endif // !defined MOVE_LIST_H






