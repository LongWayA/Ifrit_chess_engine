#ifndef A_STRUCTURE_H
#define A_STRUCTURE_H

#include "a_All_constants.h" 

//--------------------------------------------------------------------------
/* +
 * АВТОР Бренкман Андрей (Brenkman Andrey)
 * ПОСЛЕДНЕЕ ИЗМЕНЕНИЕ 17.05.2008
*/
//--------------------------------------------------------------------------

/*
 УРОВЕНЬ МОЕГО ДОВЕРИЯ 90%

  описываем структуры
  коллекция всех структур используемых в программе
*/

//--------------------------------------


// unsigned __int8 : 0 to 255
//          __int8 : -128 to 127

// unsigned __int16 :  0 to 65535
//          __int16 : -32768 to 32767

// unsigned __int32 : 0 to 4294967295
//          __int32 : -2147483648 to 2147483647

// unsigned __int64 : 0 to 
//          __int64 : - to 

//---------------------------------------------------------------------------
// эта структура нужна реализатору(делателю) ходов для восстановления позиции после хода
struct T_undo
{
	// флаг возврата взятия на проходе 1/0
	bool return_taking_passage;

	// х координата битого поля(конвертируем из буквы) 
	// так а - 0 , h - 7 таким образом по х отображение прямое
	unsigned __int8  taking_passage_x;

	// у координата битого поля
	// так '1' - 0 , '8' - 7 таким образом отображение тоже прямое только сдвинуто на 1
	unsigned __int8  taking_passage_y;

	// флаг рокировки белых в длинную сторону
	bool return_castling_Q;

	// флаг рокировки белых в короткую сторону
	bool return_castling_K;

	// флаг рокировки черных в длинную сторону
	bool return_castling_q;

	// флаг рокировки черных в короткую сторону
	bool return_castling_k;

};

//---------------------------------------------------------------------------
// линия варианта
struct T_PV 
{
	// описание хода смотреть в классе List_surplus_moves
	__int32 move[MAX_DEPTH]; 

	// оценка варианта
	__int32 score_move;

	// длина варианта
	unsigned __int8  depth_max;

};

//---------------------------------------------------------------------------

#endif // !defined D_STRUCTURE_H






