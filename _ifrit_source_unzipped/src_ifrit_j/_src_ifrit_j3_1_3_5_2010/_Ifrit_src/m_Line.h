#include "a_Structure.h"
//-----------------------------------------------------------------------------------
/*
 * АВТОР Бренкман Андрей (Brenkman Andrey)
 * ПОСЛЕДНЕЕ ИЗМЕНЕНИЕ 27.02.2009
*/
//-----------------------------------------------------------------------------------


/*

Работа с линией главного варианта

У нас есть линия варианта общая для всего поиска pv_current. 
Ее мы заполняем, когда спускаемся на глубину Update_PV_current.  

Есть еще лучшая линия варианта pv_best. 
Ее мы заполняем перед тем как выйти из узла Update_PV_best.
Особый случай ее обновления на максимальной глубине Update_PV_best_max_depth.

Так же в каждом узле есть лучшая линия варианта для данного узла p_PV_best_point.
Ее мы обновляем каждый раз когда в узле нашли лучший ход Update_PV_best_point.

*/

namespace PVSAVE{

//////////////////////////////////////////////////////////////////////////////////////////
//public:

//---------------------------------------------------------------------------
// возвращаем лучший вариант
struct T_PV * get_pv_best();

//---------------------------------------------------------------------------
// возвращаем текущий вариант
struct T_PV * get_pv_current();

//---------------------------------------------------------------------------
// обновляем линию лучшего варианта в узле
void Update_PV_best_point(struct T_PV * const p_PV_best_point// лучший вариант найденный в узле
						  );

//---------------------------------------------------------------------------
// обновляем линию лучшего варианта
void Update_PV_best(const struct T_PV * const p_PV_best_point// лучший вариант найденный в узле
					);

//---------------------------------------------------------------------------
// обновляем линию лучшего варианта на максимальной глубине
void Update_PV_best_max_depth(const __int32 & score,// оценка позиции в конце варианта
							  const unsigned __int8 & depth// текущая глубина
							  );

//---------------------------------------------------------------------------
// записываем ход в текущий вариант
void Update_PV_current(const unsigned __int8 & i,// номер хода в списке ходов
					   const unsigned __int8 & depth,// текущая глубина
					   const struct T_list_surplus_moves * const p_list_surplus_moves// список ходов
					   );

//---------------------------------------------------------------------------
// выводим вариант который обдумываем
void Print_currmove(const struct T_list_surplus_moves * const p_list_surplus_moves,//список ходов
				  const unsigned __int8 nodes_0,// количество ходов на нулевой глубине
				  const unsigned __int8 i,// номер хода по списку
				  const unsigned __int8 Depth_Max// максимальная глубина
				  );

// выводим текущий вариант в оболочку
void Print_pv_line(const bool colour_move,// цвет печатающей стороны
				const struct T_list_surplus_moves * const p_list_surplus_moves,// список ходов
				const struct T_PV * const p_PV_best_point,// лучший вариант
				const __int64 print_nodes,// количество узлов
				const unsigned __int8 i,// номер хода в списке
				const unsigned __int8 Depth_Max,// максимальная глубина
				const __int32 value// оценка позиции
				//,const double time_nodes// время расчета варианта
				);

};//namespace PVSAVE
