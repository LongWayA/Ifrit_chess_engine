#include <iostream.h>
#include "k_Util.h"
//-----------------------------------------------------------------------------------
/* +
 * задаем функции по работе с массивом шахматной доски
 *
 * АВТОР ChessTerminator75
 * ПОСЛЕДНЕЕ ИЗМЕНЕНИЕ 21.07.2007
 *
 *  ТЕСТИРОВАНИЕ
 * непосредственных тестов нет
*/

//---------------------------------------------------------------------------

// функция переводящая координаты доски в одномерное представление
// ПАРАМЕТРЫ
// level доступ к уровню 0-очередь хода 1-имена фигур(1-64) 
// 2-цвета фигур(65-128) 3-битие на проходе(129-131) 4-рокировка(132-137)
// х у-координаты доски инверсны по у т.е. (1,1) это а8 (1,2) это а7 и т.д.
// для бития на проходе х=1 -разрешение бития х=2 х кордината х=3 у кордината битого поля
// для рокировки х=1-белый король х=2-черный король х=3-белая ладья слева
// х=4-белая ладья справа х=5-черная ладья слева х=6-черная ладья справа

// РЕЗУЛЬТАТ
// имена фигур кодируются следующим образом
// 0-нет фигуры 1-пешка 2-ладья 3-конь 4-слон 5-ферзь 6-король
// цвета фигур кодируются как 1-белая 2-черная

//	===================================================================
// выводим содержимое доски по координатам
int xy_board_out(int level,int x,int y,int chess_board[]){
    int z=0;
   if (x<1) x=1;
   if (x>8) x=8;
   if (y<1) y=1;
   if (y>8) y=8;
//level 0-------------------   
   if (level==0) z=0;
//level 1 2-------------------
   if ((level>0)&(level<3)){
      z = ((level-1)*64)+((y-1)*8 + x);
   }//if (level>0)&(level<3){
//level 3-------------------
   if (level==3) {
	   if(x>3)x=3;
	   z = ((level-1)*64) + x;
   }
//level 4-------------------
   if (level==4) {
       if(x>6)x=6;
	   z = ((level-2)*64)+3 + x;
   }

 return chess_board[z];
}
//	*******************************************************************

//	===================================================================
// вводим содержимое доски по координатам
// доска фигур занимает(1-64) доска цветов фигур(65-128) битие на проходе(129-131)
// рокировка (132-137)
void xy_board_in(int level,int x,int y,int zn,int chess_board[]){
   int z=0;
   if (x<1) x=1;
   if (x>8) x=8;
   if (y<1) y=1;
   if (y>8) y=8;
//level 0-------------------   
   if (level==0) z=0;
//level 1 2-------------------
   if ((level>0)&(level<3)){
      z = ((level-1)*64)+((y-1)*8 + x);
   }//if (level>0)&(level<3){
//level 3-------------------
   if (level==3) {
	   if(x>3)x=3;
	   z = ((level-1)*64) + x;
   }
//level 4-------------------
   if (level==4) {
       if(x>6)x=6;
	   z = ((level-2)*64)+3 + x;
   }
     chess_board[z]=zn;
}//xy_board_in(int level,int x,int y,int z,int chess_board[]){
//	*******************************************************************



//	===================================================================
// конвертируем число фигуры в букву
// 0-нет фигуры, 1-пешка, 2-конь, 3-слон, 4-ладья, 5-ферзь, 6-король	
char int_to_char_board(int i,int z){
	char ch=' ';
	if (z==0){
	if (i==0) ch='x'; 
    if (i==1) ch='p'; 
    if (i==2) ch='n'; 
    if (i==3) ch='b'; 
    if (i==4) ch='r'; 
    if (i==5) ch='q'; 
    if (i==6) ch='k'; 
	}else{
    if (i==0) ch='x'; 
    if (i==1) ch='P'; 
    if (i==2) ch='N'; 
    if (i==3) ch='B'; 
    if (i==4) ch='R'; 
    if (i==5) ch='Q'; 
    if (i==6) ch='K'; 
    }
	return ch;
}//int_to_char_board(int i)
//	*******************************************************************

//	===================================================================
// конвертируем букву фигуры в число
// 0-нет фигуры, 1-пешка, 2-ладья, 3-конь, 4-слон, 5-ферзь, 6-король	
int char_to_int_board(char f){
	int i=-1;
	if (f=='x') i= 0; 
    if ((f=='p')||(f=='P')) i= 1;  
    if ((f=='r')||(f=='R')) i= 4; 
    if ((f=='n')||(f=='N')) i= 2;  
    if ((f=='b')||(f=='B')) i= 3;  
    if ((f=='q')||(f=='Q')) i= 5;  
    if ((f=='k')||(f=='K')) i= 6;   
	return i;
}//int char_to_int_board(char f){
//	*******************************************************************

//	===================================================================
//	по координате х доски выдаем букву нотации например 0 - а	
	char x_to_notation(short int x){
			   if (x ==0) return 'a';
			   if (x ==1) return 'b';
			   if (x ==2) return 'c';
			   if (x ==3) return 'd';
			   if (x ==4) return 'e';
			   if (x ==5) return 'f';
			   if (x ==6) return 'g';
			   if (x ==7) return 'h';
			   return 'o';
			  }
//	*******************************************************************





